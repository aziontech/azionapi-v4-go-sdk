/*
Accounts API

REST API OpenAPI documentation for the Accounts API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accounts

import (
	"encoding/json"
)

// checks if the AccountInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountInfoRequest{}

// AccountInfoRequest struct for AccountInfoRequest
type AccountInfoRequest struct {
	// The industry type.
	Industry map[string]interface{} `json:"industry,omitempty"`
	// The size of the company. Must be an integer greater than or equal to 1.
	CompanySize *int32 `json:"company_size,omitempty"`
}

// NewAccountInfoRequest instantiates a new AccountInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountInfoRequest() *AccountInfoRequest {
	this := AccountInfoRequest{}
	return &this
}

// NewAccountInfoRequestWithDefaults instantiates a new AccountInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountInfoRequestWithDefaults() *AccountInfoRequest {
	this := AccountInfoRequest{}
	return &this
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *AccountInfoRequest) GetIndustry() map[string]interface{} {
	if o == nil || IsNil(o.Industry) {
		var ret map[string]interface{}
		return ret
	}
	return o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfoRequest) GetIndustryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Industry) {
		return map[string]interface{}{}, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *AccountInfoRequest) HasIndustry() bool {
	if o != nil && !IsNil(o.Industry) {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given map[string]interface{} and assigns it to the Industry field.
func (o *AccountInfoRequest) SetIndustry(v map[string]interface{}) {
	o.Industry = v
}

// GetCompanySize returns the CompanySize field value if set, zero value otherwise.
func (o *AccountInfoRequest) GetCompanySize() int32 {
	if o == nil || IsNil(o.CompanySize) {
		var ret int32
		return ret
	}
	return *o.CompanySize
}

// GetCompanySizeOk returns a tuple with the CompanySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfoRequest) GetCompanySizeOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanySize) {
		return nil, false
	}
	return o.CompanySize, true
}

// HasCompanySize returns a boolean if a field has been set.
func (o *AccountInfoRequest) HasCompanySize() bool {
	if o != nil && !IsNil(o.CompanySize) {
		return true
	}

	return false
}

// SetCompanySize gets a reference to the given int32 and assigns it to the CompanySize field.
func (o *AccountInfoRequest) SetCompanySize(v int32) {
	o.CompanySize = &v
}

func (o AccountInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Industry) {
		toSerialize["industry"] = o.Industry
	}
	if !IsNil(o.CompanySize) {
		toSerialize["company_size"] = o.CompanySize
	}
	return toSerialize, nil
}

type NullableAccountInfoRequest struct {
	value *AccountInfoRequest
	isSet bool
}

func (v NullableAccountInfoRequest) Get() *AccountInfoRequest {
	return v.value
}

func (v *NullableAccountInfoRequest) Set(val *AccountInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountInfoRequest(val *AccountInfoRequest) *NullableAccountInfoRequest {
	return &NullableAccountInfoRequest{value: val, isSet: true}
}

func (v NullableAccountInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


