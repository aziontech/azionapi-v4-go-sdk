/*
Accounts API

REST API OpenAPI documentation for the Accounts API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accounts-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBrandRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrandRequest{}

// CreateBrandRequest struct for CreateBrandRequest
type CreateBrandRequest struct {
	Name string `json:"name" validate:"regexp=.*"`
	ParentId int32 `json:"parent_id"`
}

type _CreateBrandRequest CreateBrandRequest

// NewCreateBrandRequest instantiates a new CreateBrandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrandRequest(name string, parentId int32) *CreateBrandRequest {
	this := CreateBrandRequest{}
	this.Name = name
	this.ParentId = parentId
	return &this
}

// NewCreateBrandRequestWithDefaults instantiates a new CreateBrandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrandRequestWithDefaults() *CreateBrandRequest {
	this := CreateBrandRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateBrandRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateBrandRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateBrandRequest) SetName(v string) {
	o.Name = v
}

// GetParentId returns the ParentId field value
func (o *CreateBrandRequest) GetParentId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *CreateBrandRequest) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *CreateBrandRequest) SetParentId(v int32) {
	o.ParentId = v
}

func (o CreateBrandRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrandRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["parent_id"] = o.ParentId
	return toSerialize, nil
}

func (o *CreateBrandRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"parent_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBrandRequest := _CreateBrandRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBrandRequest)

	if err != nil {
		return err
	}

	*o = CreateBrandRequest(varCreateBrandRequest)

	return err
}

type NullableCreateBrandRequest struct {
	value *CreateBrandRequest
	isSet bool
}

func (v NullableCreateBrandRequest) Get() *CreateBrandRequest {
	return v.value
}

func (v *NullableCreateBrandRequest) Set(val *CreateBrandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrandRequest(val *CreateBrandRequest) *NullableCreateBrandRequest {
	return &NullableCreateBrandRequest{value: val, isSet: true}
}

func (v NullableCreateBrandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


