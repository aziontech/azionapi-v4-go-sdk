/*
Auth API

REST API OpenAPI documentation for the Auth API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestPolicy{}

// ResponseBadRequestPolicy struct for ResponseBadRequestPolicy
type ResponseBadRequestPolicy struct {
	Name []string `json:"name,omitempty"`
	Active []string `json:"active,omitempty"`
	Rules []string `json:"rules,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Detail *string `json:"detail,omitempty"`
}

// NewResponseBadRequestPolicy instantiates a new ResponseBadRequestPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestPolicy() *ResponseBadRequestPolicy {
	this := ResponseBadRequestPolicy{}
	return &this
}

// NewResponseBadRequestPolicyWithDefaults instantiates a new ResponseBadRequestPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestPolicyWithDefaults() *ResponseBadRequestPolicy {
	this := ResponseBadRequestPolicy{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestPolicy) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestPolicy) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestPolicy) SetName(v []string) {
	o.Name = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestPolicy) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestPolicy) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestPolicy) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestPolicy) SetActive(v []string) {
	o.Active = v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *ResponseBadRequestPolicy) GetRules() []string {
	if o == nil || IsNil(o.Rules) {
		var ret []string
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestPolicy) GetRulesOk() ([]string, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *ResponseBadRequestPolicy) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []string and assigns it to the Rules field.
func (o *ResponseBadRequestPolicy) SetRules(v []string) {
	o.Rules = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestPolicy) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestPolicy) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestPolicy) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestPolicy) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestPolicy) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestPolicy) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestPolicy) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestPolicy) SetLastModified(v []string) {
	o.LastModified = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestPolicy) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestPolicy) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestPolicy) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestPolicy) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestPolicy struct {
	value *ResponseBadRequestPolicy
	isSet bool
}

func (v NullableResponseBadRequestPolicy) Get() *ResponseBadRequestPolicy {
	return v.value
}

func (v *NullableResponseBadRequestPolicy) Set(val *ResponseBadRequestPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestPolicy(val *ResponseBadRequestPolicy) *NullableResponseBadRequestPolicy {
	return &NullableResponseBadRequestPolicy{value: val, isSet: true}
}

func (v NullableResponseBadRequestPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


