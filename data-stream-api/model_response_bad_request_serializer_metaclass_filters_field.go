/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
)

// checks if the ResponseBadRequestSerializerMetaclassFiltersField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestSerializerMetaclassFiltersField{}

// ResponseBadRequestSerializerMetaclassFiltersField struct for ResponseBadRequestSerializerMetaclassFiltersField
type ResponseBadRequestSerializerMetaclassFiltersField struct {
	SamplingEnable []string `json:"sampling_enable,omitempty"`
	SamplingRate []string `json:"sampling_rate,omitempty"`
	Workloads *ResponseBadRequestSerializerMetaclassFiltersFieldWorkloads `json:"workloads,omitempty"`
}

// NewResponseBadRequestSerializerMetaclassFiltersField instantiates a new ResponseBadRequestSerializerMetaclassFiltersField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestSerializerMetaclassFiltersField() *ResponseBadRequestSerializerMetaclassFiltersField {
	this := ResponseBadRequestSerializerMetaclassFiltersField{}
	return &this
}

// NewResponseBadRequestSerializerMetaclassFiltersFieldWithDefaults instantiates a new ResponseBadRequestSerializerMetaclassFiltersField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestSerializerMetaclassFiltersFieldWithDefaults() *ResponseBadRequestSerializerMetaclassFiltersField {
	this := ResponseBadRequestSerializerMetaclassFiltersField{}
	return &this
}

// GetSamplingEnable returns the SamplingEnable field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) GetSamplingEnable() []string {
	if o == nil || IsNil(o.SamplingEnable) {
		var ret []string
		return ret
	}
	return o.SamplingEnable
}

// GetSamplingEnableOk returns a tuple with the SamplingEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) GetSamplingEnableOk() ([]string, bool) {
	if o == nil || IsNil(o.SamplingEnable) {
		return nil, false
	}
	return o.SamplingEnable, true
}

// HasSamplingEnable returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) HasSamplingEnable() bool {
	if o != nil && !IsNil(o.SamplingEnable) {
		return true
	}

	return false
}

// SetSamplingEnable gets a reference to the given []string and assigns it to the SamplingEnable field.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) SetSamplingEnable(v []string) {
	o.SamplingEnable = v
}

// GetSamplingRate returns the SamplingRate field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) GetSamplingRate() []string {
	if o == nil || IsNil(o.SamplingRate) {
		var ret []string
		return ret
	}
	return o.SamplingRate
}

// GetSamplingRateOk returns a tuple with the SamplingRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) GetSamplingRateOk() ([]string, bool) {
	if o == nil || IsNil(o.SamplingRate) {
		return nil, false
	}
	return o.SamplingRate, true
}

// HasSamplingRate returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) HasSamplingRate() bool {
	if o != nil && !IsNil(o.SamplingRate) {
		return true
	}

	return false
}

// SetSamplingRate gets a reference to the given []string and assigns it to the SamplingRate field.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) SetSamplingRate(v []string) {
	o.SamplingRate = v
}

// GetWorkloads returns the Workloads field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) GetWorkloads() ResponseBadRequestSerializerMetaclassFiltersFieldWorkloads {
	if o == nil || IsNil(o.Workloads) {
		var ret ResponseBadRequestSerializerMetaclassFiltersFieldWorkloads
		return ret
	}
	return *o.Workloads
}

// GetWorkloadsOk returns a tuple with the Workloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) GetWorkloadsOk() (*ResponseBadRequestSerializerMetaclassFiltersFieldWorkloads, bool) {
	if o == nil || IsNil(o.Workloads) {
		return nil, false
	}
	return o.Workloads, true
}

// HasWorkloads returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) HasWorkloads() bool {
	if o != nil && !IsNil(o.Workloads) {
		return true
	}

	return false
}

// SetWorkloads gets a reference to the given ResponseBadRequestSerializerMetaclassFiltersFieldWorkloads and assigns it to the Workloads field.
func (o *ResponseBadRequestSerializerMetaclassFiltersField) SetWorkloads(v ResponseBadRequestSerializerMetaclassFiltersFieldWorkloads) {
	o.Workloads = &v
}

func (o ResponseBadRequestSerializerMetaclassFiltersField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestSerializerMetaclassFiltersField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SamplingEnable) {
		toSerialize["sampling_enable"] = o.SamplingEnable
	}
	if !IsNil(o.SamplingRate) {
		toSerialize["sampling_rate"] = o.SamplingRate
	}
	if !IsNil(o.Workloads) {
		toSerialize["workloads"] = o.Workloads
	}
	return toSerialize, nil
}

type NullableResponseBadRequestSerializerMetaclassFiltersField struct {
	value *ResponseBadRequestSerializerMetaclassFiltersField
	isSet bool
}

func (v NullableResponseBadRequestSerializerMetaclassFiltersField) Get() *ResponseBadRequestSerializerMetaclassFiltersField {
	return v.value
}

func (v *NullableResponseBadRequestSerializerMetaclassFiltersField) Set(val *ResponseBadRequestSerializerMetaclassFiltersField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestSerializerMetaclassFiltersField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestSerializerMetaclassFiltersField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestSerializerMetaclassFiltersField(val *ResponseBadRequestSerializerMetaclassFiltersField) *NullableResponseBadRequestSerializerMetaclassFiltersField {
	return &NullableResponseBadRequestSerializerMetaclassFiltersField{value: val, isSet: true}
}

func (v NullableResponseBadRequestSerializerMetaclassFiltersField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestSerializerMetaclassFiltersField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


