/*
data-stream-api

REST API OpenAPI documentation for the Data Stream

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data-stream-api

import (
	"encoding/json"
)

// checks if the ResponseBadRequestDataSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestDataSet{}

// ResponseBadRequestDataSet struct for ResponseBadRequestDataSet
type ResponseBadRequestDataSet struct {
	Name []string `json:"name,omitempty"`
	Active []string `json:"active,omitempty"`
	DataSet []string `json:"data_set,omitempty"`
	Custom []string `json:"custom,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Detail *string `json:"detail,omitempty" validate:"regexp=.*"`
}

// NewResponseBadRequestDataSet instantiates a new ResponseBadRequestDataSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestDataSet() *ResponseBadRequestDataSet {
	this := ResponseBadRequestDataSet{}
	return &this
}

// NewResponseBadRequestDataSetWithDefaults instantiates a new ResponseBadRequestDataSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestDataSetWithDefaults() *ResponseBadRequestDataSet {
	this := ResponseBadRequestDataSet{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestDataSet) SetName(v []string) {
	o.Name = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestDataSet) SetActive(v []string) {
	o.Active = v
}

// GetDataSet returns the DataSet field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetDataSet() []string {
	if o == nil || IsNil(o.DataSet) {
		var ret []string
		return ret
	}
	return o.DataSet
}

// GetDataSetOk returns a tuple with the DataSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetDataSetOk() ([]string, bool) {
	if o == nil || IsNil(o.DataSet) {
		return nil, false
	}
	return o.DataSet, true
}

// HasDataSet returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasDataSet() bool {
	if o != nil && !IsNil(o.DataSet) {
		return true
	}

	return false
}

// SetDataSet gets a reference to the given []string and assigns it to the DataSet field.
func (o *ResponseBadRequestDataSet) SetDataSet(v []string) {
	o.DataSet = v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetCustom() []string {
	if o == nil || IsNil(o.Custom) {
		var ret []string
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetCustomOk() ([]string, bool) {
	if o == nil || IsNil(o.Custom) {
		return nil, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given []string and assigns it to the Custom field.
func (o *ResponseBadRequestDataSet) SetCustom(v []string) {
	o.Custom = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestDataSet) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestDataSet) SetLastModified(v []string) {
	o.LastModified = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestDataSet) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestDataSet) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestDataSet) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestDataSet) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestDataSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestDataSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.DataSet) {
		toSerialize["data_set"] = o.DataSet
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestDataSet struct {
	value *ResponseBadRequestDataSet
	isSet bool
}

func (v NullableResponseBadRequestDataSet) Get() *ResponseBadRequestDataSet {
	return v.value
}

func (v *NullableResponseBadRequestDataSet) Set(val *ResponseBadRequestDataSet) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestDataSet) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestDataSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestDataSet(val *ResponseBadRequestDataSet) *NullableResponseBadRequestDataSet {
	return &NullableResponseBadRequestDataSet{value: val, isSet: true}
}

func (v NullableResponseBadRequestDataSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestDataSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


