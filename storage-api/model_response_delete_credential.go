/*
object-storage-api

REST API OpenAPI documentation for the Object Storage

API version: 1.0.0 (v1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage-api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResponseDeleteCredential type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseDeleteCredential{}

// ResponseDeleteCredential struct for ResponseDeleteCredential
type ResponseDeleteCredential struct {
	// * `pending` - pending * `executed` - executed
	State string `json:"state"`
	Data NullableCredential `json:"data"`
}

type _ResponseDeleteCredential ResponseDeleteCredential

// NewResponseDeleteCredential instantiates a new ResponseDeleteCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseDeleteCredential(state string, data NullableCredential) *ResponseDeleteCredential {
	this := ResponseDeleteCredential{}
	this.State = state
	this.Data = data
	return &this
}

// NewResponseDeleteCredentialWithDefaults instantiates a new ResponseDeleteCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseDeleteCredentialWithDefaults() *ResponseDeleteCredential {
	this := ResponseDeleteCredential{}
	return &this
}

// GetState returns the State field value
func (o *ResponseDeleteCredential) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ResponseDeleteCredential) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ResponseDeleteCredential) SetState(v string) {
	o.State = v
}

// GetData returns the Data field value
// If the value is explicit nil, the zero value for Credential will be returned
func (o *ResponseDeleteCredential) GetData() Credential {
	if o == nil || o.Data.Get() == nil {
		var ret Credential
		return ret
	}

	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseDeleteCredential) GetDataOk() (*Credential, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// SetData sets field value
func (o *ResponseDeleteCredential) SetData(v Credential) {
	o.Data.Set(&v)
}

func (o ResponseDeleteCredential) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseDeleteCredential) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["state"] = o.State
	toSerialize["data"] = o.Data.Get()
	return toSerialize, nil
}

func (o *ResponseDeleteCredential) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"state",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseDeleteCredential := _ResponseDeleteCredential{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResponseDeleteCredential)

	if err != nil {
		return err
	}

	*o = ResponseDeleteCredential(varResponseDeleteCredential)

	return err
}

type NullableResponseDeleteCredential struct {
	value *ResponseDeleteCredential
	isSet bool
}

func (v NullableResponseDeleteCredential) Get() *ResponseDeleteCredential {
	return v.value
}

func (v *NullableResponseDeleteCredential) Set(val *ResponseDeleteCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseDeleteCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseDeleteCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseDeleteCredential(val *ResponseDeleteCredential) *NullableResponseDeleteCredential {
	return &NullableResponseDeleteCredential{value: val, isSet: true}
}

func (v NullableResponseDeleteCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseDeleteCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


