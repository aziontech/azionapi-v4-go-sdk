name: Apply Patch to Committed Files if necessary and Automerge PRs

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  apply_patch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        if: ${{ contains(github.event.pull_request.title, 'Patch yml') }}  # Runs only if "Patch yml" is NOT in the PR title
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 2

      - name: Find newly committed files
        if: ${{ contains(github.event.pull_request.title, 'Patch yml') }}  # Runs only if "Patch yml" is NOT in the PR title
        id: find_files
        run: |
          FILES=$(git diff --name-only --diff-filter=A ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          if [[ -z "$FILES" ]]; then
            echo "No new files detected. Exiting."
            exit 0
          fi
          echo "NEW_FILES<<EOF" >> $GITHUB_ENV
          echo "$FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Apply corresponding patches
        if: ${{ contains(github.event.pull_request.title, 'Patch yml') }}  # Runs only if "Patch yml" is NOT in the PR title
        run: |
          while read -r FILE; do
            PATCH_FILE="${FILE}.patch"
            if [[ -f "$PATCH_FILE" ]]; then
              echo "Applying patch: $PATCH_FILE to $FILE"
              patch "$FILE" < "$PATCH_FILE"
            else
              echo "No matching patch file found for $FILE. Skipping."
            fi
          done <<< "$NEW_FILES"

      - name: Commit and push changes
        if: ${{ contains(github.event.pull_request.title, 'Patch yml') }}  # Runs only if "Patch yml" is NOT in the PR title
        run: |
          if git diff --quiet; then
            echo "No changes after patching. Skipping commit."
            exit 0
          fi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Applied patches to new files"
          git push

  automerge:
    needs: apply_patch
    runs-on: ubuntu-latest
    permissions:
        contents: write
        pull-requests: write
    steps:
      - name: automerge
        id: automerge
        uses: "pascalgn/automerge-action@v0.16.4"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ""

