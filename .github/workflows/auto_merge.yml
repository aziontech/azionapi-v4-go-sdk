name: Auto Merge PRs

on:
  pull_request:
    types:
      - labeled
      - synchronize
      - reopened
      - opened
      - ready_for_review

permissions:
  pull-requests: write
  contents: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Wait for the PR to be mergeable with all checks passed
      - name: Wait for mergeable state
        id: wait-mergeable
        uses: actions/github-script@v6
        with:
          script: |
            const pull_number = context.payload.pull_request.number;
            let mergeableState = '';
            let tries = 0;

            do {
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number
              });

              mergeableState = pr.data.mergeable_state;

              if (mergeableState === 'clean') {
                break;
              }

              if (tries >= 10) {  // Timeout after 10 attempts
                core.setFailed(`PR did not become mergeable within the timeout: current state is '${mergeableState}'`);
              }

              console.log(`Waiting for PR to become mergeable... Current state: ${mergeableState}`);
              await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds
              tries++;
            } while (mergeableState !== 'clean');

      # Automatically merge the PR
      - name: Merge the pull request
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
