/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the PaginatedResponseListWorkloadList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedResponseListWorkloadList{}

// PaginatedResponseListWorkloadList struct for PaginatedResponseListWorkloadList
type PaginatedResponseListWorkloadList struct {
	Count *int32 `json:"count,omitempty"`
	Results []ResponseListWorkload `json:"results,omitempty"`
}

// NewPaginatedResponseListWorkloadList instantiates a new PaginatedResponseListWorkloadList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedResponseListWorkloadList() *PaginatedResponseListWorkloadList {
	this := PaginatedResponseListWorkloadList{}
	return &this
}

// NewPaginatedResponseListWorkloadListWithDefaults instantiates a new PaginatedResponseListWorkloadList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedResponseListWorkloadListWithDefaults() *PaginatedResponseListWorkloadList {
	this := PaginatedResponseListWorkloadList{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *PaginatedResponseListWorkloadList) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseListWorkloadList) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *PaginatedResponseListWorkloadList) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *PaginatedResponseListWorkloadList) SetCount(v int32) {
	o.Count = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *PaginatedResponseListWorkloadList) GetResults() []ResponseListWorkload {
	if o == nil || IsNil(o.Results) {
		var ret []ResponseListWorkload
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseListWorkloadList) GetResultsOk() ([]ResponseListWorkload, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *PaginatedResponseListWorkloadList) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []ResponseListWorkload and assigns it to the Results field.
func (o *PaginatedResponseListWorkloadList) SetResults(v []ResponseListWorkload) {
	o.Results = v
}

func (o PaginatedResponseListWorkloadList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedResponseListWorkloadList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullablePaginatedResponseListWorkloadList struct {
	value *PaginatedResponseListWorkloadList
	isSet bool
}

func (v NullablePaginatedResponseListWorkloadList) Get() *PaginatedResponseListWorkloadList {
	return v.value
}

func (v *NullablePaginatedResponseListWorkloadList) Set(val *PaginatedResponseListWorkloadList) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedResponseListWorkloadList) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedResponseListWorkloadList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedResponseListWorkloadList(val *PaginatedResponseListWorkloadList) *NullablePaginatedResponseListWorkloadList {
	return &NullablePaginatedResponseListWorkloadList{value: val, isSet: true}
}

func (v NullablePaginatedResponseListWorkloadList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedResponseListWorkloadList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


