/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the PatchedErrorResponsesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedErrorResponsesRequest{}

// PatchedErrorResponsesRequest struct for PatchedErrorResponsesRequest
type PatchedErrorResponsesRequest struct {
	OriginId NullableInt32 `json:"origin_id,omitempty"`
	ErrorResponses []NestedErrorResponseRequest `json:"error_responses,omitempty"`
}

// NewPatchedErrorResponsesRequest instantiates a new PatchedErrorResponsesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedErrorResponsesRequest() *PatchedErrorResponsesRequest {
	this := PatchedErrorResponsesRequest{}
	return &this
}

// NewPatchedErrorResponsesRequestWithDefaults instantiates a new PatchedErrorResponsesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedErrorResponsesRequestWithDefaults() *PatchedErrorResponsesRequest {
	this := PatchedErrorResponsesRequest{}
	return &this
}

// GetOriginId returns the OriginId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedErrorResponsesRequest) GetOriginId() int32 {
	if o == nil || IsNil(o.OriginId.Get()) {
		var ret int32
		return ret
	}
	return *o.OriginId.Get()
}

// GetOriginIdOk returns a tuple with the OriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedErrorResponsesRequest) GetOriginIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginId.Get(), o.OriginId.IsSet()
}

// HasOriginId returns a boolean if a field has been set.
func (o *PatchedErrorResponsesRequest) HasOriginId() bool {
	if o != nil && o.OriginId.IsSet() {
		return true
	}

	return false
}

// SetOriginId gets a reference to the given NullableInt32 and assigns it to the OriginId field.
func (o *PatchedErrorResponsesRequest) SetOriginId(v int32) {
	o.OriginId.Set(&v)
}
// SetOriginIdNil sets the value for OriginId to be an explicit nil
func (o *PatchedErrorResponsesRequest) SetOriginIdNil() {
	o.OriginId.Set(nil)
}

// UnsetOriginId ensures that no value is present for OriginId, not even an explicit nil
func (o *PatchedErrorResponsesRequest) UnsetOriginId() {
	o.OriginId.Unset()
}

// GetErrorResponses returns the ErrorResponses field value if set, zero value otherwise.
func (o *PatchedErrorResponsesRequest) GetErrorResponses() []NestedErrorResponseRequest {
	if o == nil || IsNil(o.ErrorResponses) {
		var ret []NestedErrorResponseRequest
		return ret
	}
	return o.ErrorResponses
}

// GetErrorResponsesOk returns a tuple with the ErrorResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedErrorResponsesRequest) GetErrorResponsesOk() ([]NestedErrorResponseRequest, bool) {
	if o == nil || IsNil(o.ErrorResponses) {
		return nil, false
	}
	return o.ErrorResponses, true
}

// HasErrorResponses returns a boolean if a field has been set.
func (o *PatchedErrorResponsesRequest) HasErrorResponses() bool {
	if o != nil && !IsNil(o.ErrorResponses) {
		return true
	}

	return false
}

// SetErrorResponses gets a reference to the given []NestedErrorResponseRequest and assigns it to the ErrorResponses field.
func (o *PatchedErrorResponsesRequest) SetErrorResponses(v []NestedErrorResponseRequest) {
	o.ErrorResponses = v
}

func (o PatchedErrorResponsesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedErrorResponsesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OriginId.IsSet() {
		toSerialize["origin_id"] = o.OriginId.Get()
	}
	if !IsNil(o.ErrorResponses) {
		toSerialize["error_responses"] = o.ErrorResponses
	}
	return toSerialize, nil
}

type NullablePatchedErrorResponsesRequest struct {
	value *PatchedErrorResponsesRequest
	isSet bool
}

func (v NullablePatchedErrorResponsesRequest) Get() *PatchedErrorResponsesRequest {
	return v.value
}

func (v *NullablePatchedErrorResponsesRequest) Set(val *PatchedErrorResponsesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedErrorResponsesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedErrorResponsesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedErrorResponsesRequest(val *PatchedErrorResponsesRequest) *NullablePatchedErrorResponsesRequest {
	return &NullablePatchedErrorResponsesRequest{value: val, isSet: true}
}

func (v NullablePatchedErrorResponsesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedErrorResponsesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


