/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the ResponseBadRequestSerializerMetaclassProtocolsField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestSerializerMetaclassProtocolsField{}

// ResponseBadRequestSerializerMetaclassProtocolsField struct for ResponseBadRequestSerializerMetaclassProtocolsField
type ResponseBadRequestSerializerMetaclassProtocolsField struct {
	Http *ResponseBadRequestProtocolsSerializerHttpField `json:"http,omitempty"`
}

// NewResponseBadRequestSerializerMetaclassProtocolsField instantiates a new ResponseBadRequestSerializerMetaclassProtocolsField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestSerializerMetaclassProtocolsField() *ResponseBadRequestSerializerMetaclassProtocolsField {
	this := ResponseBadRequestSerializerMetaclassProtocolsField{}
	return &this
}

// NewResponseBadRequestSerializerMetaclassProtocolsFieldWithDefaults instantiates a new ResponseBadRequestSerializerMetaclassProtocolsField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestSerializerMetaclassProtocolsFieldWithDefaults() *ResponseBadRequestSerializerMetaclassProtocolsField {
	this := ResponseBadRequestSerializerMetaclassProtocolsField{}
	return &this
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *ResponseBadRequestSerializerMetaclassProtocolsField) GetHttp() ResponseBadRequestProtocolsSerializerHttpField {
	if o == nil || IsNil(o.Http) {
		var ret ResponseBadRequestProtocolsSerializerHttpField
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestSerializerMetaclassProtocolsField) GetHttpOk() (*ResponseBadRequestProtocolsSerializerHttpField, bool) {
	if o == nil || IsNil(o.Http) {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *ResponseBadRequestSerializerMetaclassProtocolsField) HasHttp() bool {
	if o != nil && !IsNil(o.Http) {
		return true
	}

	return false
}

// SetHttp gets a reference to the given ResponseBadRequestProtocolsSerializerHttpField and assigns it to the Http field.
func (o *ResponseBadRequestSerializerMetaclassProtocolsField) SetHttp(v ResponseBadRequestProtocolsSerializerHttpField) {
	o.Http = &v
}

func (o ResponseBadRequestSerializerMetaclassProtocolsField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestSerializerMetaclassProtocolsField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Http) {
		toSerialize["http"] = o.Http
	}
	return toSerialize, nil
}

type NullableResponseBadRequestSerializerMetaclassProtocolsField struct {
	value *ResponseBadRequestSerializerMetaclassProtocolsField
	isSet bool
}

func (v NullableResponseBadRequestSerializerMetaclassProtocolsField) Get() *ResponseBadRequestSerializerMetaclassProtocolsField {
	return v.value
}

func (v *NullableResponseBadRequestSerializerMetaclassProtocolsField) Set(val *ResponseBadRequestSerializerMetaclassProtocolsField) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestSerializerMetaclassProtocolsField) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestSerializerMetaclassProtocolsField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestSerializerMetaclassProtocolsField(val *ResponseBadRequestSerializerMetaclassProtocolsField) *NullableResponseBadRequestSerializerMetaclassProtocolsField {
	return &NullableResponseBadRequestSerializerMetaclassProtocolsField{value: val, isSet: true}
}

func (v NullableResponseBadRequestSerializerMetaclassProtocolsField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestSerializerMetaclassProtocolsField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


