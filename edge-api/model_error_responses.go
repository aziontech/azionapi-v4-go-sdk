/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ErrorResponses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponses{}

// ErrorResponses struct for ErrorResponses
type ErrorResponses struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	EdgeApplicationId int32 `json:"edge_application_id"`
	OriginId NullableInt32 `json:"origin_id,omitempty"`
	ErrorResponses []NestedErrorResponse `json:"error_responses"`
}

type _ErrorResponses ErrorResponses

// NewErrorResponses instantiates a new ErrorResponses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponses(id int32, name string, edgeApplicationId int32, errorResponses []NestedErrorResponse) *ErrorResponses {
	this := ErrorResponses{}
	this.Id = id
	this.Name = name
	this.EdgeApplicationId = edgeApplicationId
	this.ErrorResponses = errorResponses
	return &this
}

// NewErrorResponsesWithDefaults instantiates a new ErrorResponses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponsesWithDefaults() *ErrorResponses {
	this := ErrorResponses{}
	return &this
}

// GetId returns the Id field value
func (o *ErrorResponses) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ErrorResponses) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ErrorResponses) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ErrorResponses) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ErrorResponses) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ErrorResponses) SetName(v string) {
	o.Name = v
}

// GetEdgeApplicationId returns the EdgeApplicationId field value
func (o *ErrorResponses) GetEdgeApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EdgeApplicationId
}

// GetEdgeApplicationIdOk returns a tuple with the EdgeApplicationId field value
// and a boolean to check if the value has been set.
func (o *ErrorResponses) GetEdgeApplicationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EdgeApplicationId, true
}

// SetEdgeApplicationId sets field value
func (o *ErrorResponses) SetEdgeApplicationId(v int32) {
	o.EdgeApplicationId = v
}

// GetOriginId returns the OriginId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponses) GetOriginId() int32 {
	if o == nil || IsNil(o.OriginId.Get()) {
		var ret int32
		return ret
	}
	return *o.OriginId.Get()
}

// GetOriginIdOk returns a tuple with the OriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponses) GetOriginIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginId.Get(), o.OriginId.IsSet()
}

// HasOriginId returns a boolean if a field has been set.
func (o *ErrorResponses) HasOriginId() bool {
	if o != nil && o.OriginId.IsSet() {
		return true
	}

	return false
}

// SetOriginId gets a reference to the given NullableInt32 and assigns it to the OriginId field.
func (o *ErrorResponses) SetOriginId(v int32) {
	o.OriginId.Set(&v)
}
// SetOriginIdNil sets the value for OriginId to be an explicit nil
func (o *ErrorResponses) SetOriginIdNil() {
	o.OriginId.Set(nil)
}

// UnsetOriginId ensures that no value is present for OriginId, not even an explicit nil
func (o *ErrorResponses) UnsetOriginId() {
	o.OriginId.Unset()
}

// GetErrorResponses returns the ErrorResponses field value
func (o *ErrorResponses) GetErrorResponses() []NestedErrorResponse {
	if o == nil {
		var ret []NestedErrorResponse
		return ret
	}

	return o.ErrorResponses
}

// GetErrorResponsesOk returns a tuple with the ErrorResponses field value
// and a boolean to check if the value has been set.
func (o *ErrorResponses) GetErrorResponsesOk() ([]NestedErrorResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorResponses, true
}

// SetErrorResponses sets field value
func (o *ErrorResponses) SetErrorResponses(v []NestedErrorResponse) {
	o.ErrorResponses = v
}

func (o ErrorResponses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["edge_application_id"] = o.EdgeApplicationId
	if o.OriginId.IsSet() {
		toSerialize["origin_id"] = o.OriginId.Get()
	}
	toSerialize["error_responses"] = o.ErrorResponses
	return toSerialize, nil
}

func (o *ErrorResponses) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"edge_application_id",
		"error_responses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varErrorResponses := _ErrorResponses{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varErrorResponses)

	if err != nil {
		return err
	}

	*o = ErrorResponses(varErrorResponses)

	return err
}

type NullableErrorResponses struct {
	value *ErrorResponses
	isSet bool
}

func (v NullableErrorResponses) Get() *ErrorResponses {
	return v.value
}

func (v *NullableErrorResponses) Set(val *ErrorResponses) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponses) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponses(val *ErrorResponses) *NullableErrorResponses {
	return &NullableErrorResponses{value: val, isSet: true}
}

func (v NullableErrorResponses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


