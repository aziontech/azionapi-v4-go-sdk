openapi: 3.0.3
info:
  title: data-stream-api
  version: 1.0.0
  description: REST API OpenAPI documentation for the Data Stream
paths:
  /data_stream/data_sets:
    get:
      operationId: listDataSets
      description: List all Data Sets owned by your account.
      summary: List Data Sets
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Data Stream - Data Sets
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListDataSetList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSet'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    post:
      operationId: createDataSet
      description: Create a new custom Data Set in your account.
      summary: Create a Data Set
      tags:
      - Data Stream - Data Sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataSet'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSet'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataSet'
          description: Accepted
  /data_stream/data_sets/{id}:
    get:
      operationId: retrieveDataSet
      description: Retrieve details from a specific Data Set in your account.
      summary: Retrieve details of a Data Set
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Sets
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveDataSet'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSet'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    put:
      operationId: updateDataSet
      description: Update an existing custom Data Set.
      summary: Update a Data Set
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataSet'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSet'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataSet'
          description: Accepted
    patch:
      operationId: partialUpdateDataSet
      description: Update one or more fields of an existing custom Data Set.
      summary: Partially update a Data Set
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataSetRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataSet'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSet'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataSet'
          description: Accepted
    delete:
      operationId: destroyDataSet
      description: Destruction of a specific custom Data Set in your account.
      summary: Destroy a Data Set
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Sets
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteDataSet'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteDataSet'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSet'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
  /data_stream/data_sources:
    get:
      operationId: listDataSources
      description: List all Data Sources.
      summary: List of Data Sources
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      tags:
      - Data Stream - Data Sources
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListDataSourceList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataSource'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
  /data_stream/streams:
    get:
      operationId: listDataStreams
      description: List all Data Streams owned by your account.
      summary: List Data Streams
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page_size
        schema:
          type: integer
        description: A numeric value that indicates the number of items per page.
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Data Stream - Data Streams
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseListDataStreamList'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataStream'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    post:
      operationId: createDataStream
      description: Create a new Data Stream in your account.
      summary: Create a Data Stream
      tags:
      - Data Stream - Data Streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStreamRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataStream'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Accepted
  /data_stream/streams/{id}:
    get:
      operationId: retrieveDataStream
      description: Retrieve details from a specific Data Stream in your account.
      summary: Retrieve details of a Data Stream
      parameters:
      - in: query
        name: fields
        schema:
          type: string
        description: Comma-separated list of field names to include in the response.
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Streams
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRetrieveDataStream'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataStream'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
    put:
      operationId: updateDataStream
      description: Update an existing Data Stream.
      summary: Update a Data Stream
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStreamRequest'
        required: true
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataStream'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Accepted
    patch:
      operationId: partialUpdateDataStream
      description: Update one or more fields of an existing Data Stream.
      summary: Partially update a Data Stream
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataStreamRequest'
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Ok
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataStream'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataStream'
          description: Accepted
    delete:
      operationId: destroyDataStream
      description: Destruction of a specific Data Stream in your account.
      summary: Destroy a Data Stream
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Data Stream - Data Streams
      security:
      - TokenAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteDataStream'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteDataStream'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBadRequestDataStream'
          description: Bad Request
        '404':
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Found
        '406':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Not Acceptable
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Too Many Requests
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
          description: Forbidden
components:
  schemas:
    AWSKinesisFirehoseEndpoint:
      type: object
      properties:
        access_key:
          type: string
          maxLength: 150
        stream_name:
          type: string
          maxLength: 64
        region:
          type: string
          maxLength: 50
        secret_key:
          type: string
          maxLength: 150
      required:
      - access_key
      - region
      - secret_key
      - stream_name
      title: AWSKinesisFirehoseEndpoint
      additionalProperties: false
    AWSKinesisFirehoseEndpointRequest:
      type: object
      properties:
        access_key:
          type: string
          minLength: 1
          maxLength: 150
        stream_name:
          type: string
          minLength: 1
          maxLength: 64
        region:
          type: string
          minLength: 1
          maxLength: 50
        secret_key:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - access_key
      - region
      - secret_key
      - stream_name
      title: AWSKinesisFirehoseEndpointRequest
      additionalProperties: false
    AzureBlobStorageEndpoint:
      type: object
      properties:
        storage_account:
          type: string
          maxLength: 100
        container_name:
          type: string
          maxLength: 150
        blob_sas_token:
          type: string
          maxLength: 250
      required:
      - blob_sas_token
      - container_name
      - storage_account
      title: AzureBlobStorageEndpoint
      additionalProperties: false
    AzureBlobStorageEndpointRequest:
      type: object
      properties:
        storage_account:
          type: string
          minLength: 1
          maxLength: 100
        container_name:
          type: string
          minLength: 1
          maxLength: 150
        blob_sas_token:
          type: string
          minLength: 1
          maxLength: 250
      required:
      - blob_sas_token
      - container_name
      - storage_account
      title: AzureBlobStorageEndpointRequest
      additionalProperties: false
    AzureMonitorEndpoint:
      type: object
      properties:
        log_type:
          type: string
          maxLength: 100
        shared_key:
          type: string
          maxLength: 150
        time_generated_field:
          type: string
          nullable: true
          maxLength: 50
        workspace_id:
          type: string
          maxLength: 150
      required:
      - log_type
      - shared_key
      - workspace_id
      title: AzureMonitorEndpoint
      additionalProperties: false
    AzureMonitorEndpointRequest:
      type: object
      properties:
        log_type:
          type: string
          minLength: 1
          maxLength: 100
        shared_key:
          type: string
          minLength: 1
          maxLength: 150
        time_generated_field:
          type: string
          nullable: true
          minLength: 1
          maxLength: 50
        workspace_id:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - log_type
      - shared_key
      - workspace_id
      title: AzureMonitorEndpointRequest
      additionalProperties: false
    BigQueryEndpoint:
      type: object
      properties:
        dataset_id:
          type: string
          maxLength: 1024
        project_id:
          type: string
          maxLength: 100
        table_id:
          type: string
          maxLength: 1024
        service_account_key:
          type: string
      required:
      - dataset_id
      - project_id
      - service_account_key
      - table_id
      title: BigQueryEndpoint
      additionalProperties: false
    BigQueryEndpointRequest:
      type: object
      properties:
        dataset_id:
          type: string
          minLength: 1
          maxLength: 1024
        project_id:
          type: string
          minLength: 1
          maxLength: 100
        table_id:
          type: string
          minLength: 1
          maxLength: 1024
        service_account_key:
          type: string
          minLength: 1
      required:
      - dataset_id
      - project_id
      - service_account_key
      - table_id
      title: BigQueryEndpointRequest
      additionalProperties: false
    ContentTypeEnum:
      enum:
      - plain/text
      - application/gzip
      type: string
      description: |-
        * `plain/text` - plain/text
        * `application/gzip` - application/gzip
      title: ContentTypeEnum
      additionalProperties: false
    DataSet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
          minLength: 1
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        custom:
          type: boolean
          readOnly: true
        active:
          type: boolean
          default: true
        data_set:
          type: string
      required:
      - custom
      - data_set
      - id
      - last_editor
      - last_modified
      - name
      title: DataSet
      additionalProperties: false
    DataSetRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        active:
          type: boolean
          default: true
        data_set:
          type: string
          minLength: 1
      required:
      - data_set
      - name
      title: DataSetRequest
      additionalProperties: false
    DataSourceEnum:
      enum:
      - http
      - waf
      - cells_console
      - rtm_activity
      type: string
      description: |-
        * `http` - Edge Applications
        * `waf` - WAF Events
        * `cells_console` - Edge Functions
        * `rtm_activity` - Activity History
      title: DataSourceEnum
      additionalProperties: false
    DataStream:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
        data_source:
          $ref: '#/components/schemas/DataSourceEnum'
        data_set_id:
          type: integer
        active:
          type: boolean
          default: true
        filters:
          $ref: '#/components/schemas/DataStreamFilter'
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        product_version:
          type: string
          readOnly: true
        endpoint:
          $ref: '#/components/schemas/Endpoint'
      required:
      - data_set_id
      - data_source
      - endpoint
      - filters
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: DataStream
      additionalProperties: false
    DataStreamFilter:
      type: object
      properties:
        sampling_enable:
          type: boolean
          default: false
        sampling_rate:
          type: integer
          maximum: 100
          minimum: 1
          default: 100
        workloads:
          type: array
          items:
            type: integer
      title: DataStreamFilter
      additionalProperties: false
    DataStreamFilterRequest:
      type: object
      properties:
        sampling_enable:
          type: boolean
          default: false
        sampling_rate:
          type: integer
          maximum: 100
          minimum: 1
          default: 100
        workloads:
          type: array
          items:
            type: integer
      title: DataStreamFilterRequest
      additionalProperties: false
    DataStreamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        data_source:
          $ref: '#/components/schemas/DataSourceEnum'
        data_set_id:
          type: integer
        active:
          type: boolean
          default: true
        filters:
          $ref: '#/components/schemas/DataStreamFilterRequest'
        endpoint:
          $ref: '#/components/schemas/EndpointRequest'
      required:
      - data_set_id
      - data_source
      - endpoint
      - filters
      - name
      title: DataStreamRequest
      additionalProperties: false
    DatadogEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 1024
        api_key:
          type: string
          maxLength: 255
      required:
      - api_key
      - url
      title: DatadogEndpoint
      additionalProperties: false
    DatadogEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1024
        api_key:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - api_key
      - url
      title: DatadogEndpointRequest
      additionalProperties: false
    DefaultErrorResponse:
      type: object
      properties:
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: DefaultErrorResponse
      additionalProperties: false
    ElasticsearchEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 1024
        api_key:
          type: string
          maxLength: 255
      required:
      - api_key
      - url
      title: ElasticsearchEndpoint
      additionalProperties: false
    ElasticsearchEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1024
        api_key:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - api_key
      - url
      title: ElasticsearchEndpointRequest
      additionalProperties: false
    Endpoint:
      oneOf:
      - $ref: '#/components/schemas/HttpPostEndpoint'
      - $ref: '#/components/schemas/KafkaEndpoint'
      - $ref: '#/components/schemas/S3Endpoint'
      - $ref: '#/components/schemas/BigQueryEndpoint'
      - $ref: '#/components/schemas/ElasticsearchEndpoint'
      - $ref: '#/components/schemas/AWSKinesisFirehoseEndpoint'
      - $ref: '#/components/schemas/DatadogEndpoint'
      - $ref: '#/components/schemas/QRadarEndpoint'
      - $ref: '#/components/schemas/AzureMonitorEndpoint'
      - $ref: '#/components/schemas/AzureBlobStorageEndpoint'
      - $ref: '#/components/schemas/SplunkEndpoint'
      discriminator:
        propertyName: endpoint_type
        mapping:
          standard: '#/components/schemas/HttpPostEndpoint'
          kafka: '#/components/schemas/KafkaEndpoint'
          s3: '#/components/schemas/S3Endpoint'
          big_query: '#/components/schemas/BigQueryEndpoint'
          elasticsearch: '#/components/schemas/ElasticsearchEndpoint'
          aws_kinesis_firehose: '#/components/schemas/AWSKinesisFirehoseEndpoint'
          datadog: '#/components/schemas/DatadogEndpoint'
          qradar: '#/components/schemas/QRadarEndpoint'
          azure_monitor: '#/components/schemas/AzureMonitorEndpoint'
          azure_blob_storage: '#/components/schemas/AzureBlobStorageEndpoint'
          splunk: '#/components/schemas/SplunkEndpoint'
      title: Endpoint
      additionalProperties: true
    EndpointRequest:
      oneOf:
      - $ref: '#/components/schemas/HttpPostEndpointRequest'
      - $ref: '#/components/schemas/KafkaEndpointRequest'
      - $ref: '#/components/schemas/S3EndpointRequest'
      - $ref: '#/components/schemas/BigQueryEndpointRequest'
      - $ref: '#/components/schemas/ElasticsearchEndpointRequest'
      - $ref: '#/components/schemas/AWSKinesisFirehoseEndpointRequest'
      - $ref: '#/components/schemas/DatadogEndpointRequest'
      - $ref: '#/components/schemas/QRadarEndpointRequest'
      - $ref: '#/components/schemas/AzureMonitorEndpointRequest'
      - $ref: '#/components/schemas/AzureBlobStorageEndpointRequest'
      - $ref: '#/components/schemas/SplunkEndpointRequest'
      discriminator:
        propertyName: endpoint_type
        mapping:
          standard: '#/components/schemas/HttpPostEndpointRequest'
          kafka: '#/components/schemas/KafkaEndpointRequest'
          s3: '#/components/schemas/S3EndpointRequest'
          big_query: '#/components/schemas/BigQueryEndpointRequest'
          elasticsearch: '#/components/schemas/ElasticsearchEndpointRequest'
          aws_kinesis_firehose: '#/components/schemas/AWSKinesisFirehoseEndpointRequest'
          datadog: '#/components/schemas/DatadogEndpointRequest'
          qradar: '#/components/schemas/QRadarEndpointRequest'
          azure_monitor: '#/components/schemas/AzureMonitorEndpointRequest'
          azure_blob_storage: '#/components/schemas/AzureBlobStorageEndpointRequest'
          splunk: '#/components/schemas/SplunkEndpointRequest'
      title: EndpointRequest
      additionalProperties: true
    HttpPostEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
        log_line_separator:
          type: string
          maxLength: 100
        payload_format:
          type: string
          maxLength: 250
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 1000000
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
            maxLength: 1024
      required:
      - headers
      - url
      title: HttpPostEndpoint
      additionalProperties: false
    HttpPostEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
        log_line_separator:
          type: string
          maxLength: 100
        payload_format:
          type: string
          minLength: 1
          maxLength: 250
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 1000000
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 1024
      required:
      - headers
      - url
      title: HttpPostEndpointRequest
      additionalProperties: false
    KafkaEndpoint:
      type: object
      properties:
        bootstrap_servers:
          type: string
          maxLength: 150
        kafka_topic:
          type: string
          maxLength: 150
        use_tls:
          type: boolean
      required:
      - bootstrap_servers
      - kafka_topic
      - use_tls
      title: KafkaEndpoint
      additionalProperties: false
    KafkaEndpointRequest:
      type: object
      properties:
        bootstrap_servers:
          type: string
          minLength: 1
          maxLength: 150
        kafka_topic:
          type: string
          minLength: 1
          maxLength: 150
        use_tls:
          type: boolean
      required:
      - bootstrap_servers
      - kafka_topic
      - use_tls
      title: KafkaEndpointRequest
      additionalProperties: false
    PaginatedResponseListDataSetList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListDataSet'
      title: PaginatedResponseListDataSetList
      additionalProperties: false
    PaginatedResponseListDataSourceList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListDataSource'
      title: PaginatedResponseListDataSourceList
      additionalProperties: false
    PaginatedResponseListDataStreamList:
      type: object
      properties:
        count:
          type: integer
          minimum: 0
          maximum: 2147483647
          example: 123
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResponseListDataStream'
      title: PaginatedResponseListDataStreamList
      additionalProperties: false
    PatchedDataSetRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        active:
          type: boolean
          default: true
        data_set:
          type: string
          minLength: 1
      title: PatchedDataSetRequest
      additionalProperties: false
    PatchedDataStreamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: .*
          maxLength: 100
        data_source:
          $ref: '#/components/schemas/DataSourceEnum'
        data_set_id:
          type: integer
        active:
          type: boolean
          default: true
        filters:
          $ref: '#/components/schemas/DataStreamFilterRequest'
      title: PatchedDataStreamRequest
      additionalProperties: false
    QRadarEndpoint:
      type: object
      properties:
        url:
          type: string
          maxLength: 1024
      required:
      - url
      title: QRadarEndpoint
      additionalProperties: false
    QRadarEndpointRequest:
      type: object
      properties:
        url:
          type: string
          minLength: 1
          maxLength: 1024
      required:
      - url
      title: QRadarEndpointRequest
      additionalProperties: false
    ResponseBadRequestDataSet:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        data_set:
          type: array
          items:
            type: string
        custom:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestDataSet
      additionalProperties: false
    ResponseBadRequestDataSource:
      type: object
      properties:
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestDataSource
      additionalProperties: false
    ResponseBadRequestDataStream:
      type: object
      properties:
        name:
          type: array
          items:
            type: string
        data_source:
          type: array
          items:
            type: string
        data_set_id:
          type: array
          items:
            type: string
        active:
          type: array
          items:
            type: string
        filters:
          $ref: '#/components/schemas/ResponseBadRequestSerializerMetaclassFiltersField'
        product_version:
          type: array
          items:
            type: string
        last_editor:
          type: array
          items:
            type: string
        last_modified:
          type: array
          items:
            type: string
        detail:
          type: string
          pattern: .*
          maxLength: 4096
          minLength: 1
      title: ResponseBadRequestDataStream
      additionalProperties: false
    ResponseBadRequestSerializerMetaclassFiltersField:
      type: object
      properties:
        sampling_enable:
          type: array
          items:
            type: string
        sampling_rate:
          type: array
          items:
            type: string
        workloads:
          oneOf:
          - type: array
            items:
              type: string
          - type: object
            additionalProperties:
              type: array
              items:
                type: string
      title: ResponseBadRequestSerializerMetaclassFiltersField
      additionalProperties: false
    ResponseDataSet:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/DataSet'
      required:
      - data
      - state
      title: ResponseDataSet
      additionalProperties: false
    ResponseDataStream:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          $ref: '#/components/schemas/DataStream'
      required:
      - data
      - state
      title: ResponseDataStream
      additionalProperties: false
    ResponseDeleteDataSet:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          allOf:
          - $ref: '#/components/schemas/DataSet'
          nullable: true
      required:
      - data
      - state
      title: ResponseDeleteDataSet
      additionalProperties: false
    ResponseDeleteDataStream:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/StateEnum'
        data:
          allOf:
          - $ref: '#/components/schemas/DataStream'
          nullable: true
      required:
      - data
      - state
      title: ResponseDeleteDataStream
      additionalProperties: false
    ResponseListDataSet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
          minLength: 1
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        custom:
          type: boolean
          readOnly: true
        active:
          type: boolean
          default: true
        data_set:
          type: string
      required:
      - custom
      - data_set
      - id
      - last_editor
      - last_modified
      - name
      title: ResponseListDataSet
      additionalProperties: false
    ResponseListDataSource:
      type: object
      properties:
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          readOnly: true
          title: DataSource Name
        active:
          type: boolean
          readOnly: true
          title: Is Active
      required:
      - active
      - name
      - slug
      title: ResponseListDataSource
      additionalProperties: false
    ResponseListDataStream:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          pattern: .*
          maxLength: 100
        data_source:
          $ref: '#/components/schemas/DataSourceEnum'
        data_set_id:
          type: integer
        active:
          type: boolean
          default: true
        filters:
          $ref: '#/components/schemas/DataStreamFilter'
        last_editor:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        product_version:
          type: string
          readOnly: true
        endpoint:
          $ref: '#/components/schemas/Endpoint'
      required:
      - data_set_id
      - data_source
      - endpoint
      - filters
      - id
      - last_editor
      - last_modified
      - name
      - product_version
      title: ResponseListDataStream
      additionalProperties: false
    ResponseRetrieveDataSet:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DataSet'
      required:
      - data
      title: ResponseRetrieveDataSet
      additionalProperties: false
    ResponseRetrieveDataStream:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DataStream'
      required:
      - data
      title: ResponseRetrieveDataStream
      additionalProperties: false
    S3Endpoint:
      type: object
      properties:
        access_key:
          type: string
          maxLength: 150
        region:
          type: string
          maxLength: 50
        object_key_prefix:
          type: string
          nullable: true
          maxLength: 150
        bucket_name:
          type: string
          maxLength: 150
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        host_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - access_key
      - bucket_name
      - content_type
      - host_url
      - region
      title: S3Endpoint
      additionalProperties: false
    S3EndpointRequest:
      type: object
      properties:
        access_key:
          type: string
          minLength: 1
          maxLength: 150
        region:
          type: string
          minLength: 1
          maxLength: 50
        object_key_prefix:
          type: string
          nullable: true
          minLength: 1
          maxLength: 150
        bucket_name:
          type: string
          minLength: 1
          maxLength: 150
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        host_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 200
      required:
      - access_key
      - bucket_name
      - content_type
      - host_url
      - region
      title: S3EndpointRequest
      additionalProperties: false
    SplunkEndpoint:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 1024
        api_key:
          type: string
          maxLength: 255
      required:
      - api_key
      - url
      title: SplunkEndpoint
      additionalProperties: false
    SplunkEndpointRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1024
        api_key:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - api_key
      - url
      title: SplunkEndpointRequest
      additionalProperties: false
    StateEnum:
      enum:
      - pending
      - executed
      type: string
      description: |-
        * `pending` - pending
        * `executed` - executed
      title: StateEnum
      additionalProperties: false
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
