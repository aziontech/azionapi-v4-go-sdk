/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the ResponseBadRequestWAFRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestWAFRule{}

// ResponseBadRequestWAFRule struct for ResponseBadRequestWAFRule
type ResponseBadRequestWAFRule struct {
	RuleId []string `json:"rule_id,omitempty"`
	Name []string `json:"name,omitempty"`
	Path []string `json:"path,omitempty"`
	MatchZones []string `json:"match_zones,omitempty"`
	UseRegex []string `json:"use_regex,omitempty"`
	Active []string `json:"active,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Detail *string `json:"detail,omitempty" validate:"regexp=.*"`
}

// NewResponseBadRequestWAFRule instantiates a new ResponseBadRequestWAFRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestWAFRule() *ResponseBadRequestWAFRule {
	this := ResponseBadRequestWAFRule{}
	return &this
}

// NewResponseBadRequestWAFRuleWithDefaults instantiates a new ResponseBadRequestWAFRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestWAFRuleWithDefaults() *ResponseBadRequestWAFRule {
	this := ResponseBadRequestWAFRule{}
	return &this
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetRuleId() []string {
	if o == nil || IsNil(o.RuleId) {
		var ret []string
		return ret
	}
	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetRuleIdOk() ([]string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given []string and assigns it to the RuleId field.
func (o *ResponseBadRequestWAFRule) SetRuleId(v []string) {
	o.RuleId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestWAFRule) SetName(v []string) {
	o.Name = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetPath() []string {
	if o == nil || IsNil(o.Path) {
		var ret []string
		return ret
	}
	return o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetPathOk() ([]string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given []string and assigns it to the Path field.
func (o *ResponseBadRequestWAFRule) SetPath(v []string) {
	o.Path = v
}

// GetMatchZones returns the MatchZones field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetMatchZones() []string {
	if o == nil || IsNil(o.MatchZones) {
		var ret []string
		return ret
	}
	return o.MatchZones
}

// GetMatchZonesOk returns a tuple with the MatchZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetMatchZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.MatchZones) {
		return nil, false
	}
	return o.MatchZones, true
}

// HasMatchZones returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasMatchZones() bool {
	if o != nil && !IsNil(o.MatchZones) {
		return true
	}

	return false
}

// SetMatchZones gets a reference to the given []string and assigns it to the MatchZones field.
func (o *ResponseBadRequestWAFRule) SetMatchZones(v []string) {
	o.MatchZones = v
}

// GetUseRegex returns the UseRegex field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetUseRegex() []string {
	if o == nil || IsNil(o.UseRegex) {
		var ret []string
		return ret
	}
	return o.UseRegex
}

// GetUseRegexOk returns a tuple with the UseRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetUseRegexOk() ([]string, bool) {
	if o == nil || IsNil(o.UseRegex) {
		return nil, false
	}
	return o.UseRegex, true
}

// HasUseRegex returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasUseRegex() bool {
	if o != nil && !IsNil(o.UseRegex) {
		return true
	}

	return false
}

// SetUseRegex gets a reference to the given []string and assigns it to the UseRegex field.
func (o *ResponseBadRequestWAFRule) SetUseRegex(v []string) {
	o.UseRegex = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestWAFRule) SetActive(v []string) {
	o.Active = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestWAFRule) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestWAFRule) SetLastModified(v []string) {
	o.LastModified = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestWAFRule) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWAFRule) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestWAFRule) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestWAFRule) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestWAFRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestWAFRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleId) {
		toSerialize["rule_id"] = o.RuleId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.MatchZones) {
		toSerialize["match_zones"] = o.MatchZones
	}
	if !IsNil(o.UseRegex) {
		toSerialize["use_regex"] = o.UseRegex
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestWAFRule struct {
	value *ResponseBadRequestWAFRule
	isSet bool
}

func (v NullableResponseBadRequestWAFRule) Get() *ResponseBadRequestWAFRule {
	return v.value
}

func (v *NullableResponseBadRequestWAFRule) Set(val *ResponseBadRequestWAFRule) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestWAFRule) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestWAFRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestWAFRule(val *ResponseBadRequestWAFRule) *NullableResponseBadRequestWAFRule {
	return &NullableResponseBadRequestWAFRule{value: val, isSet: true}
}

func (v NullableResponseBadRequestWAFRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestWAFRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


