/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// PatchedEdgeConnectorPolymorphicRequest - struct for PatchedEdgeConnectorPolymorphicRequest
type PatchedEdgeConnectorPolymorphicRequest struct {
	PatchedEdgeConnectorHTTPTypedRequest *PatchedEdgeConnectorHTTPTypedRequest
	PatchedEdgeConnectorLiveIngestTypedRequest *PatchedEdgeConnectorLiveIngestTypedRequest
	PatchedEdgeConnectorS3TypedRequest *PatchedEdgeConnectorS3TypedRequest
	PatchedEdgeConnectorStorageTypedRequest *PatchedEdgeConnectorStorageTypedRequest
}

// PatchedEdgeConnectorHTTPTypedRequestAsPatchedEdgeConnectorPolymorphicRequest is a convenience function that returns PatchedEdgeConnectorHTTPTypedRequest wrapped in PatchedEdgeConnectorPolymorphicRequest
func PatchedEdgeConnectorHTTPTypedRequestAsPatchedEdgeConnectorPolymorphicRequest(v *PatchedEdgeConnectorHTTPTypedRequest) PatchedEdgeConnectorPolymorphicRequest {
	return PatchedEdgeConnectorPolymorphicRequest{
		PatchedEdgeConnectorHTTPTypedRequest: v,
	}
}

// PatchedEdgeConnectorLiveIngestTypedRequestAsPatchedEdgeConnectorPolymorphicRequest is a convenience function that returns PatchedEdgeConnectorLiveIngestTypedRequest wrapped in PatchedEdgeConnectorPolymorphicRequest
func PatchedEdgeConnectorLiveIngestTypedRequestAsPatchedEdgeConnectorPolymorphicRequest(v *PatchedEdgeConnectorLiveIngestTypedRequest) PatchedEdgeConnectorPolymorphicRequest {
	return PatchedEdgeConnectorPolymorphicRequest{
		PatchedEdgeConnectorLiveIngestTypedRequest: v,
	}
}

// PatchedEdgeConnectorS3TypedRequestAsPatchedEdgeConnectorPolymorphicRequest is a convenience function that returns PatchedEdgeConnectorS3TypedRequest wrapped in PatchedEdgeConnectorPolymorphicRequest
func PatchedEdgeConnectorS3TypedRequestAsPatchedEdgeConnectorPolymorphicRequest(v *PatchedEdgeConnectorS3TypedRequest) PatchedEdgeConnectorPolymorphicRequest {
	return PatchedEdgeConnectorPolymorphicRequest{
		PatchedEdgeConnectorS3TypedRequest: v,
	}
}

// PatchedEdgeConnectorStorageTypedRequestAsPatchedEdgeConnectorPolymorphicRequest is a convenience function that returns PatchedEdgeConnectorStorageTypedRequest wrapped in PatchedEdgeConnectorPolymorphicRequest
func PatchedEdgeConnectorStorageTypedRequestAsPatchedEdgeConnectorPolymorphicRequest(v *PatchedEdgeConnectorStorageTypedRequest) PatchedEdgeConnectorPolymorphicRequest {
	return PatchedEdgeConnectorPolymorphicRequest{
		PatchedEdgeConnectorStorageTypedRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *PatchedEdgeConnectorPolymorphicRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PatchedEdgeConnectorHTTPTypedRequest
	err = newStrictDecoder(data).Decode(&dst.PatchedEdgeConnectorHTTPTypedRequest)
	if err == nil {
		jsonPatchedEdgeConnectorHTTPTypedRequest, _ := json.Marshal(dst.PatchedEdgeConnectorHTTPTypedRequest)
		if string(jsonPatchedEdgeConnectorHTTPTypedRequest) == "{}" { // empty struct
			dst.PatchedEdgeConnectorHTTPTypedRequest = nil
		} else {
			if err = validator.Validate(dst.PatchedEdgeConnectorHTTPTypedRequest); err != nil {
				dst.PatchedEdgeConnectorHTTPTypedRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.PatchedEdgeConnectorHTTPTypedRequest = nil
	}

	// try to unmarshal data into PatchedEdgeConnectorLiveIngestTypedRequest
	err = newStrictDecoder(data).Decode(&dst.PatchedEdgeConnectorLiveIngestTypedRequest)
	if err == nil {
		jsonPatchedEdgeConnectorLiveIngestTypedRequest, _ := json.Marshal(dst.PatchedEdgeConnectorLiveIngestTypedRequest)
		if string(jsonPatchedEdgeConnectorLiveIngestTypedRequest) == "{}" { // empty struct
			dst.PatchedEdgeConnectorLiveIngestTypedRequest = nil
		} else {
			if err = validator.Validate(dst.PatchedEdgeConnectorLiveIngestTypedRequest); err != nil {
				dst.PatchedEdgeConnectorLiveIngestTypedRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.PatchedEdgeConnectorLiveIngestTypedRequest = nil
	}

	// try to unmarshal data into PatchedEdgeConnectorS3TypedRequest
	err = newStrictDecoder(data).Decode(&dst.PatchedEdgeConnectorS3TypedRequest)
	if err == nil {
		jsonPatchedEdgeConnectorS3TypedRequest, _ := json.Marshal(dst.PatchedEdgeConnectorS3TypedRequest)
		if string(jsonPatchedEdgeConnectorS3TypedRequest) == "{}" { // empty struct
			dst.PatchedEdgeConnectorS3TypedRequest = nil
		} else {
			if err = validator.Validate(dst.PatchedEdgeConnectorS3TypedRequest); err != nil {
				dst.PatchedEdgeConnectorS3TypedRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.PatchedEdgeConnectorS3TypedRequest = nil
	}

	// try to unmarshal data into PatchedEdgeConnectorStorageTypedRequest
	err = newStrictDecoder(data).Decode(&dst.PatchedEdgeConnectorStorageTypedRequest)
	if err == nil {
		jsonPatchedEdgeConnectorStorageTypedRequest, _ := json.Marshal(dst.PatchedEdgeConnectorStorageTypedRequest)
		if string(jsonPatchedEdgeConnectorStorageTypedRequest) == "{}" { // empty struct
			dst.PatchedEdgeConnectorStorageTypedRequest = nil
		} else {
			if err = validator.Validate(dst.PatchedEdgeConnectorStorageTypedRequest); err != nil {
				dst.PatchedEdgeConnectorStorageTypedRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.PatchedEdgeConnectorStorageTypedRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PatchedEdgeConnectorHTTPTypedRequest = nil
		dst.PatchedEdgeConnectorLiveIngestTypedRequest = nil
		dst.PatchedEdgeConnectorS3TypedRequest = nil
		dst.PatchedEdgeConnectorStorageTypedRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(PatchedEdgeConnectorPolymorphicRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(PatchedEdgeConnectorPolymorphicRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src PatchedEdgeConnectorPolymorphicRequest) MarshalJSON() ([]byte, error) {
	if src.PatchedEdgeConnectorHTTPTypedRequest != nil {
		return json.Marshal(&src.PatchedEdgeConnectorHTTPTypedRequest)
	}

	if src.PatchedEdgeConnectorLiveIngestTypedRequest != nil {
		return json.Marshal(&src.PatchedEdgeConnectorLiveIngestTypedRequest)
	}

	if src.PatchedEdgeConnectorS3TypedRequest != nil {
		return json.Marshal(&src.PatchedEdgeConnectorS3TypedRequest)
	}

	if src.PatchedEdgeConnectorStorageTypedRequest != nil {
		return json.Marshal(&src.PatchedEdgeConnectorStorageTypedRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *PatchedEdgeConnectorPolymorphicRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PatchedEdgeConnectorHTTPTypedRequest != nil {
		return obj.PatchedEdgeConnectorHTTPTypedRequest
	}

	if obj.PatchedEdgeConnectorLiveIngestTypedRequest != nil {
		return obj.PatchedEdgeConnectorLiveIngestTypedRequest
	}

	if obj.PatchedEdgeConnectorS3TypedRequest != nil {
		return obj.PatchedEdgeConnectorS3TypedRequest
	}

	if obj.PatchedEdgeConnectorStorageTypedRequest != nil {
		return obj.PatchedEdgeConnectorStorageTypedRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj PatchedEdgeConnectorPolymorphicRequest) GetActualInstanceValue() (interface{}) {
	if obj.PatchedEdgeConnectorHTTPTypedRequest != nil {
		return *obj.PatchedEdgeConnectorHTTPTypedRequest
	}

	if obj.PatchedEdgeConnectorLiveIngestTypedRequest != nil {
		return *obj.PatchedEdgeConnectorLiveIngestTypedRequest
	}

	if obj.PatchedEdgeConnectorS3TypedRequest != nil {
		return *obj.PatchedEdgeConnectorS3TypedRequest
	}

	if obj.PatchedEdgeConnectorStorageTypedRequest != nil {
		return *obj.PatchedEdgeConnectorStorageTypedRequest
	}

	// all schemas are nil
	return nil
}

type NullablePatchedEdgeConnectorPolymorphicRequest struct {
	value *PatchedEdgeConnectorPolymorphicRequest
	isSet bool
}

func (v NullablePatchedEdgeConnectorPolymorphicRequest) Get() *PatchedEdgeConnectorPolymorphicRequest {
	return v.value
}

func (v *NullablePatchedEdgeConnectorPolymorphicRequest) Set(val *PatchedEdgeConnectorPolymorphicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedEdgeConnectorPolymorphicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedEdgeConnectorPolymorphicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedEdgeConnectorPolymorphicRequest(val *PatchedEdgeConnectorPolymorphicRequest) *NullablePatchedEdgeConnectorPolymorphicRequest {
	return &NullablePatchedEdgeConnectorPolymorphicRequest{value: val, isSet: true}
}

func (v NullablePatchedEdgeConnectorPolymorphicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedEdgeConnectorPolymorphicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


