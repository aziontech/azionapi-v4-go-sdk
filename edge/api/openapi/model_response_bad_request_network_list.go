/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge/api/openapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestNetworkList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestNetworkList{}

// ResponseBadRequestNetworkList struct for ResponseBadRequestNetworkList
type ResponseBadRequestNetworkList struct {
	Name []string `json:"name,omitempty"`
	Id []string `json:"id,omitempty"`
	Type []string `json:"type,omitempty"`
	Items *ResponseBadRequestEdgeApplicationRuleEngineBehaviors `json:"items,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Active []string `json:"active,omitempty"`
	Detail *string `json:"detail,omitempty" validate:"regexp=.*"`
}

// NewResponseBadRequestNetworkList instantiates a new ResponseBadRequestNetworkList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestNetworkList() *ResponseBadRequestNetworkList {
	this := ResponseBadRequestNetworkList{}
	return &this
}

// NewResponseBadRequestNetworkListWithDefaults instantiates a new ResponseBadRequestNetworkList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestNetworkListWithDefaults() *ResponseBadRequestNetworkList {
	this := ResponseBadRequestNetworkList{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestNetworkList) SetName(v []string) {
	o.Name = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetId() []string {
	if o == nil || IsNil(o.Id) {
		var ret []string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given []string and assigns it to the Id field.
func (o *ResponseBadRequestNetworkList) SetId(v []string) {
	o.Id = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetType() []string {
	if o == nil || IsNil(o.Type) {
		var ret []string
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given []string and assigns it to the Type field.
func (o *ResponseBadRequestNetworkList) SetType(v []string) {
	o.Type = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetItems() ResponseBadRequestEdgeApplicationRuleEngineBehaviors {
	if o == nil || IsNil(o.Items) {
		var ret ResponseBadRequestEdgeApplicationRuleEngineBehaviors
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetItemsOk() (*ResponseBadRequestEdgeApplicationRuleEngineBehaviors, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given ResponseBadRequestEdgeApplicationRuleEngineBehaviors and assigns it to the Items field.
func (o *ResponseBadRequestNetworkList) SetItems(v ResponseBadRequestEdgeApplicationRuleEngineBehaviors) {
	o.Items = &v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestNetworkList) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestNetworkList) SetLastModified(v []string) {
	o.LastModified = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestNetworkList) SetActive(v []string) {
	o.Active = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestNetworkList) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestNetworkList) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestNetworkList) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestNetworkList) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestNetworkList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestNetworkList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestNetworkList struct {
	value *ResponseBadRequestNetworkList
	isSet bool
}

func (v NullableResponseBadRequestNetworkList) Get() *ResponseBadRequestNetworkList {
	return v.value
}

func (v *NullableResponseBadRequestNetworkList) Set(val *ResponseBadRequestNetworkList) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestNetworkList) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestNetworkList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestNetworkList(val *ResponseBadRequestNetworkList) *NullableResponseBadRequestNetworkList {
	return &NullableResponseBadRequestNetworkList{value: val, isSet: true}
}

func (v NullableResponseBadRequestNetworkList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestNetworkList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


