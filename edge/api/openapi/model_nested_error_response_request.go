/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge/api/openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NestedErrorResponseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NestedErrorResponseRequest{}

// NestedErrorResponseRequest struct for NestedErrorResponseRequest
type NestedErrorResponseRequest struct {
	// * `400` - 400: Bad Request * `401` - 401: Unauthorized * `403` - 403: Forbidden * `404` - 404: Not Found * `405` - 405: Method Not Allowed * `406` - 406: Not Acceptable * `408` - 408: Request Timeout * `409` - 409: Conflict * `410` - 410: Gone * `411` - 411: Length Required * `414` - 414: URI Too Long * `415` - 415: Unsupported Media Type * `416` - 416: Requested Range Not Satisfiable * `426` - 426: Upgrade Required * `429` - 429: Too Many Requests * `431` - 431: Request Header Fields Too Large * `500` - 500: Internal Server Error * `501` - 501: Not Implemented * `502` - 502: Bad Gateway * `503` - 503: Service Unavailable * `504` - 504: Gateway Timeout * `505` - 505: HTTP Version Not Supported * `any` - any
	Code int64 `json:"code"`
	Timeout int64 `json:"timeout"`
	Uri NullableString `json:"uri,omitempty" validate:"regexp=^\\/[\\/a-zA-Z0-9\\\\-_\\\\.\\\\~@:]*$"`
	CustomStatusCode NullableString `json:"custom_status_code,omitempty" validate:"regexp=^[1-5]\\\\d{2}$"`
}

type _NestedErrorResponseRequest NestedErrorResponseRequest

// NewNestedErrorResponseRequest instantiates a new NestedErrorResponseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNestedErrorResponseRequest(code int64, timeout int64) *NestedErrorResponseRequest {
	this := NestedErrorResponseRequest{}
	this.Code = code
	this.Timeout = timeout
	return &this
}

// NewNestedErrorResponseRequestWithDefaults instantiates a new NestedErrorResponseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNestedErrorResponseRequestWithDefaults() *NestedErrorResponseRequest {
	this := NestedErrorResponseRequest{}
	return &this
}

// GetCode returns the Code field value
func (o *NestedErrorResponseRequest) GetCode() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *NestedErrorResponseRequest) GetCodeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *NestedErrorResponseRequest) SetCode(v int64) {
	o.Code = v
}

// GetTimeout returns the Timeout field value
func (o *NestedErrorResponseRequest) GetTimeout() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *NestedErrorResponseRequest) GetTimeoutOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *NestedErrorResponseRequest) SetTimeout(v int64) {
	o.Timeout = v
}

// GetUri returns the Uri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NestedErrorResponseRequest) GetUri() string {
	if o == nil || IsNil(o.Uri.Get()) {
		var ret string
		return ret
	}
	return *o.Uri.Get()
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NestedErrorResponseRequest) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uri.Get(), o.Uri.IsSet()
}

// HasUri returns a boolean if a field has been set.
func (o *NestedErrorResponseRequest) HasUri() bool {
	if o != nil && o.Uri.IsSet() {
		return true
	}

	return false
}

// SetUri gets a reference to the given NullableString and assigns it to the Uri field.
func (o *NestedErrorResponseRequest) SetUri(v string) {
	o.Uri.Set(&v)
}
// SetUriNil sets the value for Uri to be an explicit nil
func (o *NestedErrorResponseRequest) SetUriNil() {
	o.Uri.Set(nil)
}

// UnsetUri ensures that no value is present for Uri, not even an explicit nil
func (o *NestedErrorResponseRequest) UnsetUri() {
	o.Uri.Unset()
}

// GetCustomStatusCode returns the CustomStatusCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NestedErrorResponseRequest) GetCustomStatusCode() string {
	if o == nil || IsNil(o.CustomStatusCode.Get()) {
		var ret string
		return ret
	}
	return *o.CustomStatusCode.Get()
}

// GetCustomStatusCodeOk returns a tuple with the CustomStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NestedErrorResponseRequest) GetCustomStatusCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomStatusCode.Get(), o.CustomStatusCode.IsSet()
}

// HasCustomStatusCode returns a boolean if a field has been set.
func (o *NestedErrorResponseRequest) HasCustomStatusCode() bool {
	if o != nil && o.CustomStatusCode.IsSet() {
		return true
	}

	return false
}

// SetCustomStatusCode gets a reference to the given NullableString and assigns it to the CustomStatusCode field.
func (o *NestedErrorResponseRequest) SetCustomStatusCode(v string) {
	o.CustomStatusCode.Set(&v)
}
// SetCustomStatusCodeNil sets the value for CustomStatusCode to be an explicit nil
func (o *NestedErrorResponseRequest) SetCustomStatusCodeNil() {
	o.CustomStatusCode.Set(nil)
}

// UnsetCustomStatusCode ensures that no value is present for CustomStatusCode, not even an explicit nil
func (o *NestedErrorResponseRequest) UnsetCustomStatusCode() {
	o.CustomStatusCode.Unset()
}

func (o NestedErrorResponseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NestedErrorResponseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["timeout"] = o.Timeout
	if o.Uri.IsSet() {
		toSerialize["uri"] = o.Uri.Get()
	}
	if o.CustomStatusCode.IsSet() {
		toSerialize["custom_status_code"] = o.CustomStatusCode.Get()
	}
	return toSerialize, nil
}

func (o *NestedErrorResponseRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"timeout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNestedErrorResponseRequest := _NestedErrorResponseRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNestedErrorResponseRequest)

	if err != nil {
		return err
	}

	*o = NestedErrorResponseRequest(varNestedErrorResponseRequest)

	return err
}

type NullableNestedErrorResponseRequest struct {
	value *NestedErrorResponseRequest
	isSet bool
}

func (v NullableNestedErrorResponseRequest) Get() *NestedErrorResponseRequest {
	return v.value
}

func (v *NullableNestedErrorResponseRequest) Set(val *NestedErrorResponseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNestedErrorResponseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNestedErrorResponseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNestedErrorResponseRequest(val *NestedErrorResponseRequest) *NullableNestedErrorResponseRequest {
	return &NullableNestedErrorResponseRequest{value: val, isSet: true}
}

func (v NullableNestedErrorResponseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNestedErrorResponseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


