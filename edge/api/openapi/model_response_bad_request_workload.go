/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge/api/openapi

import (
	"encoding/json"
)

// checks if the ResponseBadRequestWorkload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestWorkload{}

// ResponseBadRequestWorkload struct for ResponseBadRequestWorkload
type ResponseBadRequestWorkload struct {
	EdgeApplication []string `json:"edge_application,omitempty"`
	EdgeFirewall []string `json:"edge_firewall,omitempty"`
	Id []string `json:"id,omitempty"`
	Name []string `json:"name,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Active []string `json:"active,omitempty"`
	AlternateDomains *ResponseBadRequestEdgeApplicationRuleEngineBehaviors `json:"alternate_domains,omitempty"`
	NetworkMap []string `json:"network_map,omitempty"`
	Tls *ResponseBadRequestSerializerMetaclassTlsField `json:"tls,omitempty"`
	Protocols *ResponseBadRequestSerializerMetaclassProtocolsField `json:"protocols,omitempty"`
	Mtls *ResponseBadRequestSerializerMetaclassMtlsField `json:"mtls,omitempty"`
	Domains *ResponseBadRequestEdgeApplicationRuleEngineBehaviors `json:"domains,omitempty"`
	ProductVersion []string `json:"product_version,omitempty"`
	Detail *string `json:"detail,omitempty" validate:"regexp=.*"`
}

// NewResponseBadRequestWorkload instantiates a new ResponseBadRequestWorkload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestWorkload() *ResponseBadRequestWorkload {
	this := ResponseBadRequestWorkload{}
	return &this
}

// NewResponseBadRequestWorkloadWithDefaults instantiates a new ResponseBadRequestWorkload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestWorkloadWithDefaults() *ResponseBadRequestWorkload {
	this := ResponseBadRequestWorkload{}
	return &this
}

// GetEdgeApplication returns the EdgeApplication field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetEdgeApplication() []string {
	if o == nil || IsNil(o.EdgeApplication) {
		var ret []string
		return ret
	}
	return o.EdgeApplication
}

// GetEdgeApplicationOk returns a tuple with the EdgeApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetEdgeApplicationOk() ([]string, bool) {
	if o == nil || IsNil(o.EdgeApplication) {
		return nil, false
	}
	return o.EdgeApplication, true
}

// HasEdgeApplication returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasEdgeApplication() bool {
	if o != nil && !IsNil(o.EdgeApplication) {
		return true
	}

	return false
}

// SetEdgeApplication gets a reference to the given []string and assigns it to the EdgeApplication field.
func (o *ResponseBadRequestWorkload) SetEdgeApplication(v []string) {
	o.EdgeApplication = v
}

// GetEdgeFirewall returns the EdgeFirewall field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetEdgeFirewall() []string {
	if o == nil || IsNil(o.EdgeFirewall) {
		var ret []string
		return ret
	}
	return o.EdgeFirewall
}

// GetEdgeFirewallOk returns a tuple with the EdgeFirewall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetEdgeFirewallOk() ([]string, bool) {
	if o == nil || IsNil(o.EdgeFirewall) {
		return nil, false
	}
	return o.EdgeFirewall, true
}

// HasEdgeFirewall returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasEdgeFirewall() bool {
	if o != nil && !IsNil(o.EdgeFirewall) {
		return true
	}

	return false
}

// SetEdgeFirewall gets a reference to the given []string and assigns it to the EdgeFirewall field.
func (o *ResponseBadRequestWorkload) SetEdgeFirewall(v []string) {
	o.EdgeFirewall = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetId() []string {
	if o == nil || IsNil(o.Id) {
		var ret []string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given []string and assigns it to the Id field.
func (o *ResponseBadRequestWorkload) SetId(v []string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestWorkload) SetName(v []string) {
	o.Name = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestWorkload) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestWorkload) SetLastModified(v []string) {
	o.LastModified = v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestWorkload) SetActive(v []string) {
	o.Active = v
}

// GetAlternateDomains returns the AlternateDomains field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetAlternateDomains() ResponseBadRequestEdgeApplicationRuleEngineBehaviors {
	if o == nil || IsNil(o.AlternateDomains) {
		var ret ResponseBadRequestEdgeApplicationRuleEngineBehaviors
		return ret
	}
	return *o.AlternateDomains
}

// GetAlternateDomainsOk returns a tuple with the AlternateDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetAlternateDomainsOk() (*ResponseBadRequestEdgeApplicationRuleEngineBehaviors, bool) {
	if o == nil || IsNil(o.AlternateDomains) {
		return nil, false
	}
	return o.AlternateDomains, true
}

// HasAlternateDomains returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasAlternateDomains() bool {
	if o != nil && !IsNil(o.AlternateDomains) {
		return true
	}

	return false
}

// SetAlternateDomains gets a reference to the given ResponseBadRequestEdgeApplicationRuleEngineBehaviors and assigns it to the AlternateDomains field.
func (o *ResponseBadRequestWorkload) SetAlternateDomains(v ResponseBadRequestEdgeApplicationRuleEngineBehaviors) {
	o.AlternateDomains = &v
}

// GetNetworkMap returns the NetworkMap field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetNetworkMap() []string {
	if o == nil || IsNil(o.NetworkMap) {
		var ret []string
		return ret
	}
	return o.NetworkMap
}

// GetNetworkMapOk returns a tuple with the NetworkMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetNetworkMapOk() ([]string, bool) {
	if o == nil || IsNil(o.NetworkMap) {
		return nil, false
	}
	return o.NetworkMap, true
}

// HasNetworkMap returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasNetworkMap() bool {
	if o != nil && !IsNil(o.NetworkMap) {
		return true
	}

	return false
}

// SetNetworkMap gets a reference to the given []string and assigns it to the NetworkMap field.
func (o *ResponseBadRequestWorkload) SetNetworkMap(v []string) {
	o.NetworkMap = v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetTls() ResponseBadRequestSerializerMetaclassTlsField {
	if o == nil || IsNil(o.Tls) {
		var ret ResponseBadRequestSerializerMetaclassTlsField
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetTlsOk() (*ResponseBadRequestSerializerMetaclassTlsField, bool) {
	if o == nil || IsNil(o.Tls) {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasTls() bool {
	if o != nil && !IsNil(o.Tls) {
		return true
	}

	return false
}

// SetTls gets a reference to the given ResponseBadRequestSerializerMetaclassTlsField and assigns it to the Tls field.
func (o *ResponseBadRequestWorkload) SetTls(v ResponseBadRequestSerializerMetaclassTlsField) {
	o.Tls = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetProtocols() ResponseBadRequestSerializerMetaclassProtocolsField {
	if o == nil || IsNil(o.Protocols) {
		var ret ResponseBadRequestSerializerMetaclassProtocolsField
		return ret
	}
	return *o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetProtocolsOk() (*ResponseBadRequestSerializerMetaclassProtocolsField, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given ResponseBadRequestSerializerMetaclassProtocolsField and assigns it to the Protocols field.
func (o *ResponseBadRequestWorkload) SetProtocols(v ResponseBadRequestSerializerMetaclassProtocolsField) {
	o.Protocols = &v
}

// GetMtls returns the Mtls field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetMtls() ResponseBadRequestSerializerMetaclassMtlsField {
	if o == nil || IsNil(o.Mtls) {
		var ret ResponseBadRequestSerializerMetaclassMtlsField
		return ret
	}
	return *o.Mtls
}

// GetMtlsOk returns a tuple with the Mtls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetMtlsOk() (*ResponseBadRequestSerializerMetaclassMtlsField, bool) {
	if o == nil || IsNil(o.Mtls) {
		return nil, false
	}
	return o.Mtls, true
}

// HasMtls returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasMtls() bool {
	if o != nil && !IsNil(o.Mtls) {
		return true
	}

	return false
}

// SetMtls gets a reference to the given ResponseBadRequestSerializerMetaclassMtlsField and assigns it to the Mtls field.
func (o *ResponseBadRequestWorkload) SetMtls(v ResponseBadRequestSerializerMetaclassMtlsField) {
	o.Mtls = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetDomains() ResponseBadRequestEdgeApplicationRuleEngineBehaviors {
	if o == nil || IsNil(o.Domains) {
		var ret ResponseBadRequestEdgeApplicationRuleEngineBehaviors
		return ret
	}
	return *o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetDomainsOk() (*ResponseBadRequestEdgeApplicationRuleEngineBehaviors, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given ResponseBadRequestEdgeApplicationRuleEngineBehaviors and assigns it to the Domains field.
func (o *ResponseBadRequestWorkload) SetDomains(v ResponseBadRequestEdgeApplicationRuleEngineBehaviors) {
	o.Domains = &v
}

// GetProductVersion returns the ProductVersion field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetProductVersion() []string {
	if o == nil || IsNil(o.ProductVersion) {
		var ret []string
		return ret
	}
	return o.ProductVersion
}

// GetProductVersionOk returns a tuple with the ProductVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetProductVersionOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductVersion) {
		return nil, false
	}
	return o.ProductVersion, true
}

// HasProductVersion returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasProductVersion() bool {
	if o != nil && !IsNil(o.ProductVersion) {
		return true
	}

	return false
}

// SetProductVersion gets a reference to the given []string and assigns it to the ProductVersion field.
func (o *ResponseBadRequestWorkload) SetProductVersion(v []string) {
	o.ProductVersion = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestWorkload) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestWorkload) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestWorkload) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestWorkload) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestWorkload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestWorkload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EdgeApplication) {
		toSerialize["edge_application"] = o.EdgeApplication
	}
	if !IsNil(o.EdgeFirewall) {
		toSerialize["edge_firewall"] = o.EdgeFirewall
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AlternateDomains) {
		toSerialize["alternate_domains"] = o.AlternateDomains
	}
	if !IsNil(o.NetworkMap) {
		toSerialize["network_map"] = o.NetworkMap
	}
	if !IsNil(o.Tls) {
		toSerialize["tls"] = o.Tls
	}
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.Mtls) {
		toSerialize["mtls"] = o.Mtls
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.ProductVersion) {
		toSerialize["product_version"] = o.ProductVersion
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestWorkload struct {
	value *ResponseBadRequestWorkload
	isSet bool
}

func (v NullableResponseBadRequestWorkload) Get() *ResponseBadRequestWorkload {
	return v.value
}

func (v *NullableResponseBadRequestWorkload) Set(val *ResponseBadRequestWorkload) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestWorkload) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestWorkload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestWorkload(val *ResponseBadRequestWorkload) *NullableResponseBadRequestWorkload {
	return &NullableResponseBadRequestWorkload{value: val, isSet: true}
}

func (v NullableResponseBadRequestWorkload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestWorkload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


