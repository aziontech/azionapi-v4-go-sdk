/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the MatchesOnEnum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchesOnEnum{}

// MatchesOnEnum * `value` - Value * `name` - Name
type MatchesOnEnum struct {
}

// NewMatchesOnEnum instantiates a new MatchesOnEnum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchesOnEnum() *MatchesOnEnum {
	this := MatchesOnEnum{}
	return &this
}

// NewMatchesOnEnumWithDefaults instantiates a new MatchesOnEnum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchesOnEnumWithDefaults() *MatchesOnEnum {
	this := MatchesOnEnum{}
	return &this
}

func (o MatchesOnEnum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchesOnEnum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableMatchesOnEnum struct {
	value MatchesOnEnum
	isSet bool
}

func (v NullableMatchesOnEnum) Get() MatchesOnEnum {
	return v.value
}

func (v *NullableMatchesOnEnum) Set(val MatchesOnEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchesOnEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchesOnEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchesOnEnum(val MatchesOnEnum) *NullableMatchesOnEnum {
	return &NullableMatchesOnEnum{value: val, isSet: true}
}

func (v NullableMatchesOnEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchesOnEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


