/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the InitiatorTypeEnum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiatorTypeEnum{}

// InitiatorTypeEnum * `edge_application` - Edge Application * `edge_firewall` - Edge Firewall
type InitiatorTypeEnum struct {
}

// NewInitiatorTypeEnum instantiates a new InitiatorTypeEnum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiatorTypeEnum() *InitiatorTypeEnum {
	this := InitiatorTypeEnum{}
	return &this
}

// NewInitiatorTypeEnumWithDefaults instantiates a new InitiatorTypeEnum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiatorTypeEnumWithDefaults() *InitiatorTypeEnum {
	this := InitiatorTypeEnum{}
	return &this
}

func (o InitiatorTypeEnum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiatorTypeEnum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableInitiatorTypeEnum struct {
	value InitiatorTypeEnum
	isSet bool
}

func (v NullableInitiatorTypeEnum) Get() InitiatorTypeEnum {
	return v.value
}

func (v *NullableInitiatorTypeEnum) Set(val InitiatorTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiatorTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiatorTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiatorTypeEnum(val InitiatorTypeEnum) *NullableInitiatorTypeEnum {
	return &NullableInitiatorTypeEnum{value: val, isSet: true}
}

func (v NullableInitiatorTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiatorTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


