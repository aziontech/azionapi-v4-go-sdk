/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// EdgeApplicationBehaviorPolymorphicArgumentRequest - struct for EdgeApplicationBehaviorPolymorphicArgumentRequest
type EdgeApplicationBehaviorPolymorphicArgumentRequest struct {
	CaptureMatchGroupsArgumentRequest *CaptureMatchGroupsArgumentRequest
	Int32 *int32
	String *string
}

// CaptureMatchGroupsArgumentRequestAsEdgeApplicationBehaviorPolymorphicArgumentRequest is a convenience function that returns CaptureMatchGroupsArgumentRequest wrapped in EdgeApplicationBehaviorPolymorphicArgumentRequest
func CaptureMatchGroupsArgumentRequestAsEdgeApplicationBehaviorPolymorphicArgumentRequest(v *CaptureMatchGroupsArgumentRequest) EdgeApplicationBehaviorPolymorphicArgumentRequest {
	return EdgeApplicationBehaviorPolymorphicArgumentRequest{
		CaptureMatchGroupsArgumentRequest: v,
	}
}

// int32AsEdgeApplicationBehaviorPolymorphicArgumentRequest is a convenience function that returns int32 wrapped in EdgeApplicationBehaviorPolymorphicArgumentRequest
func Int32AsEdgeApplicationBehaviorPolymorphicArgumentRequest(v *int32) EdgeApplicationBehaviorPolymorphicArgumentRequest {
	return EdgeApplicationBehaviorPolymorphicArgumentRequest{
		Int32: v,
	}
}

// stringAsEdgeApplicationBehaviorPolymorphicArgumentRequest is a convenience function that returns string wrapped in EdgeApplicationBehaviorPolymorphicArgumentRequest
func StringAsEdgeApplicationBehaviorPolymorphicArgumentRequest(v *string) EdgeApplicationBehaviorPolymorphicArgumentRequest {
	return EdgeApplicationBehaviorPolymorphicArgumentRequest{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *EdgeApplicationBehaviorPolymorphicArgumentRequest) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into CaptureMatchGroupsArgumentRequest
	err = newStrictDecoder(data).Decode(&dst.CaptureMatchGroupsArgumentRequest)
	if err == nil {
		jsonCaptureMatchGroupsArgumentRequest, _ := json.Marshal(dst.CaptureMatchGroupsArgumentRequest)
		if string(jsonCaptureMatchGroupsArgumentRequest) == "{}" { // empty struct
			dst.CaptureMatchGroupsArgumentRequest = nil
		} else {
			if err = validator.Validate(dst.CaptureMatchGroupsArgumentRequest); err != nil {
				dst.CaptureMatchGroupsArgumentRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.CaptureMatchGroupsArgumentRequest = nil
	}

	// try to unmarshal data into Int32
	err = newStrictDecoder(data).Decode(&dst.Int32)
	if err == nil {
		jsonInt32, _ := json.Marshal(dst.Int32)
		if string(jsonInt32) == "{}" { // empty struct
			dst.Int32 = nil
		} else {
			if err = validator.Validate(dst.Int32); err != nil {
				dst.Int32 = nil
			} else {
				match++
			}
		}
	} else {
		dst.Int32 = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			if err = validator.Validate(dst.String); err != nil {
				dst.String = nil
			} else {
				match++
			}
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CaptureMatchGroupsArgumentRequest = nil
		dst.Int32 = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(EdgeApplicationBehaviorPolymorphicArgumentRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(EdgeApplicationBehaviorPolymorphicArgumentRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EdgeApplicationBehaviorPolymorphicArgumentRequest) MarshalJSON() ([]byte, error) {
	if src.CaptureMatchGroupsArgumentRequest != nil {
		return json.Marshal(&src.CaptureMatchGroupsArgumentRequest)
	}

	if src.Int32 != nil {
		return json.Marshal(&src.Int32)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EdgeApplicationBehaviorPolymorphicArgumentRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CaptureMatchGroupsArgumentRequest != nil {
		return obj.CaptureMatchGroupsArgumentRequest
	}

	if obj.Int32 != nil {
		return obj.Int32
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableEdgeApplicationBehaviorPolymorphicArgumentRequest struct {
	value *EdgeApplicationBehaviorPolymorphicArgumentRequest
	isSet bool
}

func (v NullableEdgeApplicationBehaviorPolymorphicArgumentRequest) Get() *EdgeApplicationBehaviorPolymorphicArgumentRequest {
	return v.value
}

func (v *NullableEdgeApplicationBehaviorPolymorphicArgumentRequest) Set(val *EdgeApplicationBehaviorPolymorphicArgumentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeApplicationBehaviorPolymorphicArgumentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeApplicationBehaviorPolymorphicArgumentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeApplicationBehaviorPolymorphicArgumentRequest(val *EdgeApplicationBehaviorPolymorphicArgumentRequest) *NullableEdgeApplicationBehaviorPolymorphicArgumentRequest {
	return &NullableEdgeApplicationBehaviorPolymorphicArgumentRequest{value: val, isSet: true}
}

func (v NullableEdgeApplicationBehaviorPolymorphicArgumentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeApplicationBehaviorPolymorphicArgumentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


