/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the CodeEnum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CodeEnum{}

// CodeEnum * `400` - 400: Bad Request * `401` - 401: Unauthorized * `403` - 403: Forbidden * `404` - 404: Not Found * `405` - 405: Method Not Allowed * `406` - 406: Not Acceptable * `408` - 408: Request Timeout * `409` - 409: Conflict * `410` - 410: Gone * `411` - 411: Length Required * `414` - 414: URI Too Long * `415` - 415: Unsupported Media Type * `416` - 416: Requested Range Not Satisfiable * `426` - 426: Upgrade Required * `429` - 429: Too Many Requests * `431` - 431: Request Header Fields Too Large * `500` - 500: Internal Server Error * `501` - 501: Not Implemented * `502` - 502: Bad Gateway * `503` - 503: Service Unavailable * `504` - 504: Gateway Timeout * `505` - 505: HTTP Version Not Supported * `any` - any
type CodeEnum struct {
}

// NewCodeEnum instantiates a new CodeEnum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeEnum() *CodeEnum {
	this := CodeEnum{}
	return &this
}

// NewCodeEnumWithDefaults instantiates a new CodeEnum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeEnumWithDefaults() *CodeEnum {
	this := CodeEnum{}
	return &this
}

func (o CodeEnum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodeEnum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableCodeEnum struct {
	value CodeEnum
	isSet bool
}

func (v NullableCodeEnum) Get() CodeEnum {
	return v.value
}

func (v *NullableCodeEnum) Set(val CodeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeEnum(val CodeEnum) *NullableCodeEnum {
	return &NullableCodeEnum{value: val, isSet: true}
}

func (v NullableCodeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


