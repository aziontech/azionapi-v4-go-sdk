/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the TLSRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TLSRequest{}

// TLSRequest struct for TLSRequest
type TLSRequest struct {
	// policy of security to access the origin Possible values: off, on, preserve. Default: preserve  * `off` - off * `on` - on * `preserve` - preserve
	Policy *string `json:"policy,omitempty"`
}

// NewTLSRequest instantiates a new TLSRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTLSRequest() *TLSRequest {
	this := TLSRequest{}
	return &this
}

// NewTLSRequestWithDefaults instantiates a new TLSRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTLSRequestWithDefaults() *TLSRequest {
	this := TLSRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *TLSRequest) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TLSRequest) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *TLSRequest) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *TLSRequest) SetPolicy(v string) {
	o.Policy = &v
}

func (o TLSRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TLSRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	return toSerialize, nil
}

type NullableTLSRequest struct {
	value *TLSRequest
	isSet bool
}

func (v NullableTLSRequest) Get() *TLSRequest {
	return v.value
}

func (v *NullableTLSRequest) Set(val *TLSRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTLSRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTLSRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTLSRequest(val *TLSRequest) *NullableTLSRequest {
	return &NullableTLSRequest{value: val, isSet: true}
}

func (v NullableTLSRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTLSRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


