/*
edge-api

REST API OpenAPI documentation for the edge-api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edge

import (
	"encoding/json"
)

// checks if the ResponseBadRequestBaseEdgeConnector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseBadRequestBaseEdgeConnector{}

// ResponseBadRequestBaseEdgeConnector struct for ResponseBadRequestBaseEdgeConnector
type ResponseBadRequestBaseEdgeConnector struct {
	Id []string `json:"id,omitempty"`
	Name []string `json:"name,omitempty"`
	LastEditor []string `json:"last_editor,omitempty"`
	LastModified []string `json:"last_modified,omitempty"`
	Modules *ResponseBadRequestSerializerMetaclassModulesField `json:"modules,omitempty"`
	Active []string `json:"active,omitempty"`
	ProductVersion []string `json:"product_version,omitempty"`
	Type []string `json:"type,omitempty"`
	Addresses []string `json:"addresses,omitempty"`
	Tls *ResponseBadRequestSerializerMetaclassTlsField `json:"tls,omitempty"`
	LoadBalanceMethod []string `json:"load_balance_method,omitempty"`
	ConnectionPreference *ResponseBadRequestBaseEdgeConnectorConnectionPreference `json:"connection_preference,omitempty"`
	ConnectionTimeout []string `json:"connection_timeout,omitempty"`
	ReadWriteTimeout []string `json:"read_write_timeout,omitempty"`
	MaxRetries []string `json:"max_retries,omitempty"`
	Detail *string `json:"detail,omitempty" validate:"regexp=.*"`
}

// NewResponseBadRequestBaseEdgeConnector instantiates a new ResponseBadRequestBaseEdgeConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseBadRequestBaseEdgeConnector() *ResponseBadRequestBaseEdgeConnector {
	this := ResponseBadRequestBaseEdgeConnector{}
	return &this
}

// NewResponseBadRequestBaseEdgeConnectorWithDefaults instantiates a new ResponseBadRequestBaseEdgeConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseBadRequestBaseEdgeConnectorWithDefaults() *ResponseBadRequestBaseEdgeConnector {
	this := ResponseBadRequestBaseEdgeConnector{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetId() []string {
	if o == nil || IsNil(o.Id) {
		var ret []string
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetIdOk() ([]string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given []string and assigns it to the Id field.
func (o *ResponseBadRequestBaseEdgeConnector) SetId(v []string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetName() []string {
	if o == nil || IsNil(o.Name) {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetNameOk() ([]string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ResponseBadRequestBaseEdgeConnector) SetName(v []string) {
	o.Name = v
}

// GetLastEditor returns the LastEditor field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetLastEditor() []string {
	if o == nil || IsNil(o.LastEditor) {
		var ret []string
		return ret
	}
	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetLastEditorOk() ([]string, bool) {
	if o == nil || IsNil(o.LastEditor) {
		return nil, false
	}
	return o.LastEditor, true
}

// HasLastEditor returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasLastEditor() bool {
	if o != nil && !IsNil(o.LastEditor) {
		return true
	}

	return false
}

// SetLastEditor gets a reference to the given []string and assigns it to the LastEditor field.
func (o *ResponseBadRequestBaseEdgeConnector) SetLastEditor(v []string) {
	o.LastEditor = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetLastModified() []string {
	if o == nil || IsNil(o.LastModified) {
		var ret []string
		return ret
	}
	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetLastModifiedOk() ([]string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given []string and assigns it to the LastModified field.
func (o *ResponseBadRequestBaseEdgeConnector) SetLastModified(v []string) {
	o.LastModified = v
}

// GetModules returns the Modules field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetModules() ResponseBadRequestSerializerMetaclassModulesField {
	if o == nil || IsNil(o.Modules) {
		var ret ResponseBadRequestSerializerMetaclassModulesField
		return ret
	}
	return *o.Modules
}

// GetModulesOk returns a tuple with the Modules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetModulesOk() (*ResponseBadRequestSerializerMetaclassModulesField, bool) {
	if o == nil || IsNil(o.Modules) {
		return nil, false
	}
	return o.Modules, true
}

// HasModules returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasModules() bool {
	if o != nil && !IsNil(o.Modules) {
		return true
	}

	return false
}

// SetModules gets a reference to the given ResponseBadRequestSerializerMetaclassModulesField and assigns it to the Modules field.
func (o *ResponseBadRequestBaseEdgeConnector) SetModules(v ResponseBadRequestSerializerMetaclassModulesField) {
	o.Modules = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetActive() []string {
	if o == nil || IsNil(o.Active) {
		var ret []string
		return ret
	}
	return o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetActiveOk() ([]string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given []string and assigns it to the Active field.
func (o *ResponseBadRequestBaseEdgeConnector) SetActive(v []string) {
	o.Active = v
}

// GetProductVersion returns the ProductVersion field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetProductVersion() []string {
	if o == nil || IsNil(o.ProductVersion) {
		var ret []string
		return ret
	}
	return o.ProductVersion
}

// GetProductVersionOk returns a tuple with the ProductVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetProductVersionOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductVersion) {
		return nil, false
	}
	return o.ProductVersion, true
}

// HasProductVersion returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasProductVersion() bool {
	if o != nil && !IsNil(o.ProductVersion) {
		return true
	}

	return false
}

// SetProductVersion gets a reference to the given []string and assigns it to the ProductVersion field.
func (o *ResponseBadRequestBaseEdgeConnector) SetProductVersion(v []string) {
	o.ProductVersion = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetType() []string {
	if o == nil || IsNil(o.Type) {
		var ret []string
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given []string and assigns it to the Type field.
func (o *ResponseBadRequestBaseEdgeConnector) SetType(v []string) {
	o.Type = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetAddresses() []string {
	if o == nil || IsNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *ResponseBadRequestBaseEdgeConnector) SetAddresses(v []string) {
	o.Addresses = v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetTls() ResponseBadRequestSerializerMetaclassTlsField {
	if o == nil || IsNil(o.Tls) {
		var ret ResponseBadRequestSerializerMetaclassTlsField
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetTlsOk() (*ResponseBadRequestSerializerMetaclassTlsField, bool) {
	if o == nil || IsNil(o.Tls) {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasTls() bool {
	if o != nil && !IsNil(o.Tls) {
		return true
	}

	return false
}

// SetTls gets a reference to the given ResponseBadRequestSerializerMetaclassTlsField and assigns it to the Tls field.
func (o *ResponseBadRequestBaseEdgeConnector) SetTls(v ResponseBadRequestSerializerMetaclassTlsField) {
	o.Tls = &v
}

// GetLoadBalanceMethod returns the LoadBalanceMethod field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetLoadBalanceMethod() []string {
	if o == nil || IsNil(o.LoadBalanceMethod) {
		var ret []string
		return ret
	}
	return o.LoadBalanceMethod
}

// GetLoadBalanceMethodOk returns a tuple with the LoadBalanceMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetLoadBalanceMethodOk() ([]string, bool) {
	if o == nil || IsNil(o.LoadBalanceMethod) {
		return nil, false
	}
	return o.LoadBalanceMethod, true
}

// HasLoadBalanceMethod returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasLoadBalanceMethod() bool {
	if o != nil && !IsNil(o.LoadBalanceMethod) {
		return true
	}

	return false
}

// SetLoadBalanceMethod gets a reference to the given []string and assigns it to the LoadBalanceMethod field.
func (o *ResponseBadRequestBaseEdgeConnector) SetLoadBalanceMethod(v []string) {
	o.LoadBalanceMethod = v
}

// GetConnectionPreference returns the ConnectionPreference field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetConnectionPreference() ResponseBadRequestBaseEdgeConnectorConnectionPreference {
	if o == nil || IsNil(o.ConnectionPreference) {
		var ret ResponseBadRequestBaseEdgeConnectorConnectionPreference
		return ret
	}
	return *o.ConnectionPreference
}

// GetConnectionPreferenceOk returns a tuple with the ConnectionPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetConnectionPreferenceOk() (*ResponseBadRequestBaseEdgeConnectorConnectionPreference, bool) {
	if o == nil || IsNil(o.ConnectionPreference) {
		return nil, false
	}
	return o.ConnectionPreference, true
}

// HasConnectionPreference returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasConnectionPreference() bool {
	if o != nil && !IsNil(o.ConnectionPreference) {
		return true
	}

	return false
}

// SetConnectionPreference gets a reference to the given ResponseBadRequestBaseEdgeConnectorConnectionPreference and assigns it to the ConnectionPreference field.
func (o *ResponseBadRequestBaseEdgeConnector) SetConnectionPreference(v ResponseBadRequestBaseEdgeConnectorConnectionPreference) {
	o.ConnectionPreference = &v
}

// GetConnectionTimeout returns the ConnectionTimeout field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetConnectionTimeout() []string {
	if o == nil || IsNil(o.ConnectionTimeout) {
		var ret []string
		return ret
	}
	return o.ConnectionTimeout
}

// GetConnectionTimeoutOk returns a tuple with the ConnectionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetConnectionTimeoutOk() ([]string, bool) {
	if o == nil || IsNil(o.ConnectionTimeout) {
		return nil, false
	}
	return o.ConnectionTimeout, true
}

// HasConnectionTimeout returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasConnectionTimeout() bool {
	if o != nil && !IsNil(o.ConnectionTimeout) {
		return true
	}

	return false
}

// SetConnectionTimeout gets a reference to the given []string and assigns it to the ConnectionTimeout field.
func (o *ResponseBadRequestBaseEdgeConnector) SetConnectionTimeout(v []string) {
	o.ConnectionTimeout = v
}

// GetReadWriteTimeout returns the ReadWriteTimeout field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetReadWriteTimeout() []string {
	if o == nil || IsNil(o.ReadWriteTimeout) {
		var ret []string
		return ret
	}
	return o.ReadWriteTimeout
}

// GetReadWriteTimeoutOk returns a tuple with the ReadWriteTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetReadWriteTimeoutOk() ([]string, bool) {
	if o == nil || IsNil(o.ReadWriteTimeout) {
		return nil, false
	}
	return o.ReadWriteTimeout, true
}

// HasReadWriteTimeout returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasReadWriteTimeout() bool {
	if o != nil && !IsNil(o.ReadWriteTimeout) {
		return true
	}

	return false
}

// SetReadWriteTimeout gets a reference to the given []string and assigns it to the ReadWriteTimeout field.
func (o *ResponseBadRequestBaseEdgeConnector) SetReadWriteTimeout(v []string) {
	o.ReadWriteTimeout = v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetMaxRetries() []string {
	if o == nil || IsNil(o.MaxRetries) {
		var ret []string
		return ret
	}
	return o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetMaxRetriesOk() ([]string, bool) {
	if o == nil || IsNil(o.MaxRetries) {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasMaxRetries() bool {
	if o != nil && !IsNil(o.MaxRetries) {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given []string and assigns it to the MaxRetries field.
func (o *ResponseBadRequestBaseEdgeConnector) SetMaxRetries(v []string) {
	o.MaxRetries = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ResponseBadRequestBaseEdgeConnector) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseBadRequestBaseEdgeConnector) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ResponseBadRequestBaseEdgeConnector) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ResponseBadRequestBaseEdgeConnector) SetDetail(v string) {
	o.Detail = &v
}

func (o ResponseBadRequestBaseEdgeConnector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseBadRequestBaseEdgeConnector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LastEditor) {
		toSerialize["last_editor"] = o.LastEditor
	}
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	if !IsNil(o.Modules) {
		toSerialize["modules"] = o.Modules
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.ProductVersion) {
		toSerialize["product_version"] = o.ProductVersion
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.Tls) {
		toSerialize["tls"] = o.Tls
	}
	if !IsNil(o.LoadBalanceMethod) {
		toSerialize["load_balance_method"] = o.LoadBalanceMethod
	}
	if !IsNil(o.ConnectionPreference) {
		toSerialize["connection_preference"] = o.ConnectionPreference
	}
	if !IsNil(o.ConnectionTimeout) {
		toSerialize["connection_timeout"] = o.ConnectionTimeout
	}
	if !IsNil(o.ReadWriteTimeout) {
		toSerialize["read_write_timeout"] = o.ReadWriteTimeout
	}
	if !IsNil(o.MaxRetries) {
		toSerialize["max_retries"] = o.MaxRetries
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	return toSerialize, nil
}

type NullableResponseBadRequestBaseEdgeConnector struct {
	value *ResponseBadRequestBaseEdgeConnector
	isSet bool
}

func (v NullableResponseBadRequestBaseEdgeConnector) Get() *ResponseBadRequestBaseEdgeConnector {
	return v.value
}

func (v *NullableResponseBadRequestBaseEdgeConnector) Set(val *ResponseBadRequestBaseEdgeConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseBadRequestBaseEdgeConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseBadRequestBaseEdgeConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseBadRequestBaseEdgeConnector(val *ResponseBadRequestBaseEdgeConnector) *NullableResponseBadRequestBaseEdgeConnector {
	return &NullableResponseBadRequestBaseEdgeConnector{value: val, isSet: true}
}

func (v NullableResponseBadRequestBaseEdgeConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseBadRequestBaseEdgeConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


